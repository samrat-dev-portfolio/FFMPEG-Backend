{"version":3,"sources":["ffmpeg/Entry/Entry.js","ffmpeg/Home/Header/Header.js","ffmpeg/Home/ProgressAlert/ProgressAlert.js","ffmpeg/Home/Content/Content.js","ffmpeg/Admin/Player/Player.js","ffmpeg/Home/Home.js","ffmpeg/Admin/BrandAnimation/BrandAnimation.js","ffmpeg/Admin/Menubar/Menubar.js","ffmpeg/Admin/Toast/Toast.js","ffmpeg/Admin/Admin.js","ffmpeg/Admin/Loading/Loading.js","ffmpeg/Admin/Upload/Upload.js","ffmpeg/Admin/Modal/Modal.js","ffmpeg/Admin/AddChap/Add/Add.js","ffmpeg/Admin/Conversion/Conversion.js","ffmpeg/Admin/AddCsub/AddCsub.js","ffmpeg/Admin/AddChap/AddChap.js","ffmpeg/Admin/Settings/Settings.js","ffmpeg/Routes.js","App.js","index.js"],"names":["Entry","Container","fluid","className","Row","Col","to","color","Header","props","SubjectDetails","styled","span","ChaptertDetails","style","flexDirection","selected_class","selected_subject","selected_chapter","ProgressAlert","alert","Content","loading_class","enabled","my_class","loading_subject","my_subject","loading_chapter","my_chapter","Player","show","onhide","contentID","chapter","baseurl","window","ffmpeg_baseurl","playerRef","React","useRef","playerWrapperRef","useState","getM3u8Url","setM3u8Url","useEffect","Resize","actualWidth","innerWidth","document","documentElement","clientWidth","body","offsetWidth","innerHeight","clientHeight","offsetHeight","current","width","w","onresize","_params","params","ref","size","onClick","icon","length","srcoff","xsrc","src","autoPlay","controls","height","onEnded","classList","add","setTimeout","Home","getLoading_class","setLoading_class","getClasses","setClasses","getSelectedClass","setSelectedClass","getSelectedClassName","setSelectedClassName","getSelectedChapterName","setSelectedChapterName","getLoading_subject","setLoading_subject","getSubjects","setSubjects","getSelectedSubject","setSelectedSubject","getSelectedSubjectName","setSelectedSubjectName","getLoading_chapter","setLoading_chapter","getChapters","setChapters","body_blue","loadClasses","loadSubject","query","URLSearchParams","location","search","cls","get","sub","cls_name","chap_name","urlParamCreation","loadChapter","axios","then","res","data","catch","err","click_classItem","_item","id","click_subjectItem","_id","find","item","index","subjectName","mapSelectedSubjectsName","click_chapterItem","_e","chapterName","highlight","setPlayerContentID","setPlayerTitle","setLoadPlayer","_className","_target","target","querySelectorAll","forEach","i","remove","history","push","getLoadPlayer","getPlayerContentID","getPlayerTitle","map","e","BrandAnimation","Menubar","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","href","Toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ToastAlert","_alert","type","toastRef","toast","info","success","warn","error","progress","undefined","Admin","body_blue_reset","Loading","viewBox","preserveAspectRatio","transform","attributeName","values","keyTimes","dur","repeatCount","d","fill","Upload","getIsLoading","setIsLoading","getError","setError","getUnique_ID","setUnique_ID","getContent_file_label","setContent_file_label","getContent_file_alert","setContent_file_alert","getContent_file","setContent_file","getFile_Title","setFile_Title","getFile_UploadProgress","setFile_UploadProgress","getCancelToken","setCancelToken","validated","setValidated","titleRef","loadUnique_ID","onDrop","useCallback","acceptedFiles","name","split","getElementById","removeAttribute","bytesToSize","useDropzone","multiple","getRootProps","getInputProps","isDragActive","Id","bytes","parseInt","Math","floor","log","round","pow","ResetAll","value","querySelector","setAttribute","Card","Body","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","console","formData","FormData","append","source","CancelToken","config","headers","cancelToken","token","onUploadProgress","progressEvent","percentCompleted","loaded","total","UploadProgress","post","Group","controlId","Label","Control","defaultValue","placeholder","required","readOnly","Feedback","autoComplete","onChange","File","custom","Input","files","data-browse","Text","ProgressBar","variant","animated","now","far","cancel","Modal","list","hide_visible","Button","ListGroup","Item","Add","txtChapterId","loadSubjects","loadContents","classId","subjectId","elmChapter","getSelSubject","setSelSubject","elmSubject","isValidate_Subject_Init","isValidate_Subject","LooksGoodShowHide","getAllSub","setAllSub","label","selOption","getSelClass","setSelClass","elmClass","isValidate_Class_Init","isValidate_Class","getAllCls","setAllClass","getSelContentID","setSelContentID","elmContentID","isValidate_ContentID_Init","isValidate_ContentID","getAllContents","setAllContents","unshift","refElm","refValidateInit","elm","select","controlRef","borderColor","lookGoodElm","parentNode","nextSibling","contains","display","post_data","post_url","setError_Cls","options","Conversion","getContent","setContent","getSelectedLimit","setSelectedLimit","CProgressTimer","LazyKeyupTimer","contentInput","contentInputT","contentInputF","getModalData","setModalData","getShowModal","setShowModal","getShowModalHideBtn","setShowModalHideBtn","getPageItems","setPageItems","getContentParams","setContentParams","getshowAdd","setshowAdd","getAddData","loadContent","pageindex","totalPage","PageItems","p","Pagination","pageChange","active","p_index","prevData","LazyKeyup","_callback","clearTimeout","orderByThis","orderby","desc","update_modal","msg","is_reset","prevState","Start_Click","contentFileName","fname","duration","fps","frame","CreateKey","Convertfile","frame_progress","RestoreKey2SD","RemoveKeyFromSD","confirm","Deletecontent","callback","setInterval","status","currentFrame","percent","ConversionEnded","clearInterval","Table","striped","bordered","hover","InputGroup","FormControl","aria-label","aria-describedby","onKeyUp","_contentID","_contentTitle","_contentFileName","Dropdown","Menu","ButtonGroup","marginRight","contentTitle","IsConversion","AddCsub","getIsLoading_Cls","setIsLoading_Cls","getError_Cls","tblCls","tblClsHeader","getIsEditCls","setIsEditCls","txtCls","txtClsId","getIsLoading_Sub","setIsLoading_Sub","getError_Sub","setError_Sub","tblSub","tblSubHeader","getIsEditSub","setIsEditSub","txtSub","txtSubId","Calcwidth","PostCls","PostSub","Action_Click","highlight_Edit","highlight_Edit_Sub","h","h_parent","parentElement","borderRight","colSpan","title","AddChap","getRecords","setRecords","tblRecords","getChapterParams","setChapterParams","setAddData","loadChapters","searchBy","_val","Settings","secret","setSecret","havepassword","setHavepassword","SQliteHavePassword","handleSubmit","Routes","path","exact","component","render","App","Component","clear","publish","origin","ReactDOM"],"mappings":"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","file":"static/js/main.d612f52b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Entry.scss';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nexport default function Entry() {\r\n    return (\r\n        <Container fluid className=\"C_Entry bimg-page-1\">\r\n            <Row className=\"h-100\">\r\n                <Col className=\"col-9\"></Col>\r\n                <Col className=\"col-3 p-0\">\r\n                    <div className=\"home_btn_row\">\r\n                        <Link className=\"home_btn\" to=\"/home\">\r\n                            <MDBBtn color=\"amber\">\r\n                                Enter\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Header.scss';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Header(props) {\r\n    const SubjectDetails = styled.span`\r\n       font-size: smaller;\r\n       letter-spacing: 1px;\r\n    `;\r\n    const ChaptertDetails = styled.span`\r\n       font-weight: 100;\r\n       letter-spacing: 1px;\r\n    `;\r\n    return (\r\n        <Container fluid className=\"C_Header bimg-page-2 p-0\">\r\n            <Row className=\"gutter m-0\">\r\n                <Col className=\"col-4 logo-1\"></Col>\r\n                <Col className=\"col-8 head-details\">\r\n                    <div className=\"b-orange\">\r\n                        <Col className=\"col-4 b-red c-white center-xy d-flex\" style={{ flexDirection: 'column' }}>\r\n                            <div>\r\n                                {props.selected_class}\r\n                            </div>\r\n                            <SubjectDetails>\r\n                                {\r\n                                    props.selected_subject ? props.selected_subject : ''\r\n                                }\r\n                            </SubjectDetails>\r\n                        </Col>\r\n                        <Col className=\"col-8 b-green c-white center-xy d-flex\">\r\n                            <ChaptertDetails>\r\n                                {props.selected_chapter}\r\n                            </ChaptertDetails>\r\n                        </Col>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './ProgressAlert.scss';\r\n\r\nexport default function ProgressAlert(props) {\r\n    return (\r\n        <span className=\"C_ProgressAlert progress-1\" >\r\n            {props.alert}\r\n        </span>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Content.scss';\r\nimport ProgressAlert from '../ProgressAlert/ProgressAlert';\r\n\r\nexport default function Content(props) {\r\n\r\n    return (\r\n        <Container fluid className=\"C_Content bimg-page-2 p-0\">\r\n            <Row className=\"h-100 gutter m-0\">\r\n                <Col className=\"col-12 b-orange py-1 b-radius-1 shadow-1\">\r\n                    <Row>\r\n                        <Col className=\"col-2 pl-4\">\r\n                            Shreni\r\n                        </Col>\r\n                        <Col className=\"col-3 pl-4\">\r\n                            Bishoy\r\n                        </Col>\r\n                        <Col className=\"col-7 pl-4\">\r\n                            Adhay Suchi\r\n                         </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col className=\"col-12 b-red b-radius-2 space-3\">\r\n                    <Row className=\"h-100 m-0\">\r\n                        <Col className=\"col-2 pr-0 content-box\">\r\n                            {\r\n                                props.loading_class.enabled ?\r\n                                    <ProgressAlert alert={props.loading_class.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-1\">\r\n                                    {props.my_class}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-3 pr-0 content-box\">\r\n                            {\r\n                                props.loading_subject.enabled ?\r\n                                    <ProgressAlert alert={props.loading_subject.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-2\">\r\n                                    {props.my_subject}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-7 pr-0 content-box\">\r\n                            {\r\n                                props.loading_chapter.enabled ?\r\n                                    <ProgressAlert alert={props.loading_chapter.alert} /> : null\r\n                            }\r\n                            <ul className=\"list-group grp-3\">\r\n                                {props.my_chapter}\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Col, Row, Table, Button, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactHlsPlayer from 'react-hls-player';\r\nimport './Player.scss';\r\n// import cross from '../../img/9.png';\r\nimport { MDBIcon, MDBBtn, MDBContainer, MDBNavbarNav, MDBNavbar } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nexport default function Player({ show, onhide, contentID, chapter }) {\r\n    // https://www.npmjs.com/package/react-hls-player\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const playerRef = React.useRef();\r\n    const playerWrapperRef = React.useRef();\r\n    const [getM3u8Url, setM3u8Url] = useState('');\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n    const playVideo = () => {\r\n        playerRef.current.play();\r\n    };\r\n    const pauseVideo = () => {\r\n        playerRef.current.pause();\r\n    };\r\n    const toggleControls = () => {\r\n        playerRef.current.controls = !playerRef.current.controls;\r\n    };\r\n    const endedVideo = () => {\r\n        playerRef.current.classList.add('fadex');\r\n        setTimeout(() => {\r\n            onhide();\r\n        }, 3100);\r\n    };\r\n    const Resize = () => {\r\n        var actualWidth = window.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth ||\r\n            document.body.offsetWidth;\r\n\r\n        var actualHeight = window.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight ||\r\n            document.body.offsetHeight;\r\n        if (actualWidth < actualHeight) {\r\n            // console.log('w small');\r\n            if (typeof playerWrapperRef.current === 'undefined' || playerWrapperRef.current === null) return;\r\n            playerWrapperRef.current.style.width = '90%';\r\n        } else {\r\n            // console.log('h small');\r\n            if (typeof playerWrapperRef.current === 'undefined' || playerWrapperRef.current === null) return;\r\n            let w = ((3 / 4) * actualWidth) - 50;\r\n            playerWrapperRef.current.style.width = w + 'px';\r\n        }\r\n        // console.log(actualWidth, actualHeight);\r\n    };\r\n\r\n    //#region Hooks\r\n    useEffect(() => {\r\n        document.body.onresize = () => {\r\n            Resize();\r\n        };\r\n    }, []);\r\n    useEffect(() => {\r\n        if (contentID === null) return;\r\n        const _params = {\r\n            baseurl\r\n        }\r\n        setM3u8Url(`${baseurl}api/mpeg/M3u8info/${contentID}`,{\r\n            params: _params\r\n        });\r\n        Resize();\r\n    }, [show]);\r\n    useEffect(() => {\r\n        // const fireOnVideoStart = () => {\r\n        //     // Do some stuff when the video starts/resumes playing\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('play', fireOnVideoStart);\r\n        // return playerRef.current.removeEventListener('play', fireOnVideoStart);\r\n    }, []);\r\n    useEffect(() => {\r\n        // const fireOnVideoEnd = () => {\r\n        //     // Do some stuff when the video ends\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('ended', fireOnVideoEnd);\r\n        // return playerRef.current.removeEventListener('ended', fireOnVideoEnd);\r\n    }, []);\r\n    //#endregion\r\n\r\n    return (show && <Container fluid className=\"C_Player\">\r\n        <Col className=\"text-center py-3\">\r\n            <div className=\"player-wrapper\" ref={playerWrapperRef}>\r\n                <MDBContainer className=\"text-center\">\r\n                    <Row className=\"header\">\r\n                        <Col className=\"col-12 p-0\">\r\n                            <p className=\"m-0 h-100\">&nbsp;{chapter}</p>\r\n                            <MDBBtn className=\"exit\" color=\"mdb-color\" size=\"sm\" onClick={onhide}>\r\n                                <MDBIcon icon=\"times-circle\" />&nbsp;&nbsp;Close\r\n                            </MDBBtn>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"player-body\">\r\n                        {getM3u8Url.length > 0 ?\r\n                            <ReactHlsPlayer\r\n                                playerRef={playerRef}\r\n                                srcoff=\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"\r\n                                xsrc=\"http://localhost:50017/api/mpeg/M3u8info/20210417-020532-d829654b-bdaf-4c0c-bad6-dd7ce8326e31\"\r\n                                src={getM3u8Url}\r\n                                autoPlay={false}\r\n                                controls={true}\r\n                                width=\"100%\"\r\n                                height=\"auto\"\r\n                                onEnded={endedVideo}\r\n                            /> : null\r\n                        }\r\n                    </Row>\r\n                </MDBContainer>\r\n            </div>\r\n        </Col>\r\n    </Container>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link, Redirect } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './Header/Header';\r\nimport './Home.scss';\r\nimport Content from './Content/Content';\r\nimport axios from 'axios';\r\nimport Player from '../Admin/Player/Player';\r\n\r\nexport default function Home(props) {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n\r\n    const [getLoading_class, setLoading_class] = useState({ enabled: false, alert: '' });\r\n    const [getClasses, setClasses] = useState([]);\r\n    const [getSelectedClass, setSelectedClass] = useState('');\r\n    const [getSelectedClassName, setSelectedClassName] = useState('');\r\n    const [getSelectedChapterName, setSelectedChapterName] = useState('');\r\n\r\n    const [getLoading_subject, setLoading_subject] = useState({ enabled: false, alert: '' });\r\n    const [getSubjects, setSubjects] = useState([]);\r\n    const [getSelectedSubject, setSelectedSubject] = useState('');\r\n    const [getSelectedSubjectName, setSelectedSubjectName] = useState('');\r\n\r\n    const [getLoading_chapter, setLoading_chapter] = useState({ enabled: false, alert: '' });\r\n    const [getChapters, setChapters] = useState([]);\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    // https://www.digitalocean.com/community/tutorials/react-axios-react\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        body_blue();\r\n        loadClasses();\r\n        loadSubject();\r\n        const query = new URLSearchParams(props.location.search);\r\n        const cls = query.get('cls');\r\n        if (cls)\r\n            setSelectedClass(cls);\r\n\r\n        const sub = query.get('sub');\r\n        if (sub) {\r\n            setSelectedSubject(sub);\r\n        }\r\n\r\n        const cls_name = query.get('cls_name');\r\n        if (cls_name)\r\n            setSelectedClassName(cls_name);\r\n        const chap_name = query.get('chap_name');\r\n        if (chap_name) {\r\n            setSelectedChapterName(chap_name);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n        if (getSelectedClass && getSelectedSubject) {\r\n            // console.log('change class, sub, load chapter');\r\n            loadChapter();\r\n        } else {\r\n            setLoading_chapter({ enabled: true, alert: 'Please Provide Class and subject' });\r\n        }\r\n    }, [getSelectedClass, getSelectedSubject]);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n    }, [getSelectedChapterName]);\r\n    //#endregion\r\n\r\n    //#region Load API\r\n    const loadClasses = () => {\r\n        setLoading_class({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setClasses(res.data.data);\r\n                setLoading_class({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);  \r\n            }).catch(err => {\r\n                setLoading_class({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadSubject = () => {\r\n        setLoading_subject({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setSubjects(res.data.data);\r\n                setLoading_subject({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setLoading_subject({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadChapter = () => {\r\n        setLoading_chapter({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getChapter`, {\r\n            params: {\r\n                cls: getSelectedClass,\r\n                sub: getSelectedSubject\r\n            }\r\n        })\r\n            .then(res => {\r\n                setChapters(res.data.data);\r\n                if (!res.data.data.length) {\r\n                    setLoading_chapter({ enabled: true, alert: 'No data Available' });\r\n                } else {\r\n                    setLoading_chapter({ enabled: false, alert: '' });\r\n                }\r\n                // console.log(res.data);\r\n            }).catch(err => {\r\n                setLoading_chapter({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const mapSelectedSubjectsName = _id => {\r\n        let data = getSubjects.find((item, index) => item.id == _id) || {};\r\n        data = data.subjectName || '';\r\n            setSelectedSubjectName(data);\r\n    };\r\n    //#endregion\r\n\r\n    //#region Create List View\r\n    const getClasses_view = () => {\r\n        let data = [];\r\n        data = getClasses.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_classItem(item) }}>Class {item.className}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getSubjects_view = () => {\r\n        let data = [];\r\n        data = getSubjects.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_subjectItem(item) }}>{item.subjectName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getChapters_view = () => {\r\n        let data = [];\r\n        data = getChapters.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={(e) => { click_chapterItem(e, item) }}>{item.chapterName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const click_classItem = (_item) => {\r\n        setSelectedClass(_item.id);\r\n        setSelectedClassName(`Class ${_item.className}`);\r\n    };\r\n    const click_subjectItem = (_item) => {\r\n        setSelectedSubject(_item.id);\r\n        mapSelectedSubjectsName(_item.id)\r\n    };\r\n    const click_chapterItem = (_e, _item) => {\r\n        // console.log(_item);\r\n        setSelectedChapterName(_item.chapterName);\r\n        highlight(_e, 'chapter_highlight');\r\n        if (_item.contentID == null) return;\r\n        if (_item.contentID == 'NULL') return;\r\n        setPlayerContentID(_item.contentID);\r\n        setPlayerTitle(_item.chapterName);\r\n        setLoadPlayer(true);\r\n    };\r\n    const highlight = (_e, _className) => {\r\n        var _target = _e.target;\r\n        document.querySelectorAll('.' + _className).forEach(i => {\r\n            i.classList.remove(_className);\r\n        });\r\n        _target.classList.add(_className);\r\n    };\r\n    const body_blue = () => {\r\n        document.body.classList.add('body-blue');\r\n    };\r\n    const urlParamCreation = () => {\r\n        props.history.push(`/home?cls=${getSelectedClass}&sub=${getSelectedSubject}&cls_name=${getSelectedClassName}&chap_name=${getSelectedChapterName}`);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Player\r\n    const [getLoadPlayer, setLoadPlayer] = useState(false);\r\n    const [getPlayerContentID, setPlayerContentID] = useState(null);\r\n    const [getPlayerTitle, setPlayerTitle] = useState(null);\r\n    const hidePlayer = () => {\r\n        setLoadPlayer(false);\r\n        setPlayerContentID(null);\r\n        setPlayerTitle(null);\r\n    };\r\n    //#endregion\r\n    return (\r\n        <>\r\n            <Player chapter={getPlayerTitle} show={getLoadPlayer} contentID={getPlayerContentID} onhide={hidePlayer} />\r\n            <Header selected_class={getSelectedClassName} selected_subject={getSelectedSubjectName} selected_chapter={getSelectedChapterName} />\r\n            <Content\r\n                my_class={getClasses_view()} loading_class={getLoading_class}\r\n                my_subject={getSubjects_view()} loading_subject={getLoading_subject}\r\n                my_chapter={getChapters_view()} loading_chapter={getLoading_chapter}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './BrandAnimation.scss';\r\n\r\nfunction BrandAnimation() {\r\n    return (\r\n        <div className=\"BrandAnimation\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrandAnimation\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, FormControl, Nav, Navbar, NavDropdown, Button } from 'react-bootstrap';\r\nimport './Menubar.scss';\r\n\r\nexport default function Menubar() {\r\n    useEffect(() => {\r\n        // check login\r\n    });\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"Menubar\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#admin\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#admin/upload\">Upload</Nav.Link>\r\n                    <Nav.Link href=\"#admin/conversion\">Conversion</Nav.Link>\r\n                    <Nav.Link href=\"#admin/addclsnsub\">Class-Subs</Nav.Link>\r\n                    <Nav.Link href=\"#admin/addchap\">Chapters</Nav.Link>\r\n                    <Nav.Link href=\"#admin/settings\">Settings</Nav.Link>\r\n                    {\r\n                        /*\r\n                        <NavDropdown title=\"Content\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#admin/mapchap\">Mapping Chapters</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        */\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Toast.scss';\r\n\r\nexport function Toast() {\r\n    return (\r\n        <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n        />\r\n    )\r\n}\r\n\r\nexport function ToastAlert(_alert, type = '') {\r\n    let toastRef = toast;\r\n    if (type == 'info' || type == 'i') {\r\n        toastRef = toast.info;\r\n    }\r\n    else if (type == 'success' || type == 's') {\r\n        toastRef = toast.success;\r\n    }\r\n    else if (type == 'warn' || type == 'w') {\r\n        toastRef = toast.warn;\r\n    }\r\n    else if (type == 'error' || type == 'e') {\r\n        toastRef = toast.error;\r\n    }\r\n    toastRef(_alert, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}","import React, { useState, useEffect } from 'react'\r\nimport './Admin.scss';\r\nimport BrandAnimation from './BrandAnimation/BrandAnimation';\r\nimport Menubar from './Menubar/Menubar';\r\nimport { Toast } from './Toast/Toast';\r\n\r\nexport default function Admin() {\r\n    useEffect(() => {\r\n        body_blue_reset();\r\n    });\r\n\r\n    const body_blue_reset = () => {\r\n        document.body.classList.remove('body-blue');\r\n        document.body.classList.add('body-white');\r\n    };\r\n\r\n    return (\r\n        <div className=\"C_Admin\">\r\n            <Menubar />\r\n            <Toast />\r\n            <div style={{ position: 'relative' }}>\r\n                <BrandAnimation />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Loading.scss';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"C_Loading\">\r\n            <svg                \r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                viewBox=\"0 0 100 100\"\r\n                preserveAspectRatio=\"xMidYMid\">\r\n                <g transform=\"translate(50 50)\">\r\n                    <g>\r\n                        <animateTransform attributeName=\"transform\" type=\"rotate\" values=\"0;45\" keyTimes=\"0;1\" dur=\"0.2s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <path d=\"M29.491524206117255 -5.5 L37.491524206117255 -5.5 L37.491524206117255 5.5 L29.491524206117255 5.5 A30 30 0 0 1 24.742744050198738 16.964569457146712 L24.742744050198738 16.964569457146712 L30.399598299691117 22.621423706639092 L22.621423706639096 30.399598299691114 L16.964569457146716 24.742744050198734 A30 30 0 0 1 5.5 29.491524206117255 L5.5 29.491524206117255 L5.5 37.491524206117255 L-5.499999999999997 37.491524206117255 L-5.499999999999997 29.491524206117255 A30 30 0 0 1 -16.964569457146705 24.742744050198738 L-16.964569457146705 24.742744050198738 L-22.621423706639085 30.399598299691117 L-30.399598299691117 22.621423706639092 L-24.742744050198738 16.964569457146712 A30 30 0 0 1 -29.491524206117255 5.500000000000009 L-29.491524206117255 5.500000000000009 L-37.491524206117255 5.50000000000001 L-37.491524206117255 -5.500000000000001 L-29.491524206117255 -5.500000000000002 A30 30 0 0 1 -24.742744050198738 -16.964569457146705 L-24.742744050198738 -16.964569457146705 L-30.399598299691117 -22.621423706639085 L-22.621423706639092 -30.399598299691117 L-16.964569457146712 -24.742744050198738 A30 30 0 0 1 -5.500000000000011 -29.491524206117255 L-5.500000000000011 -29.491524206117255 L-5.500000000000012 -37.491524206117255 L5.499999999999998 -37.491524206117255 L5.5 -29.491524206117255 A30 30 0 0 1 16.964569457146702 -24.74274405019874 L16.964569457146702 -24.74274405019874 L22.62142370663908 -30.39959829969112 L30.399598299691117 -22.6214237066391 L24.742744050198738 -16.964569457146716 A30 30 0 0 1 29.491524206117255 -5.500000000000013 M0 -20A20 20 0 1 0 0 20 A20 20 0 1 0 0 -20\" fill=\"#85a2b6\"></path>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Upload.scss';\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport { ToastAlert } from '../../Admin/Toast/Toast';\r\n\r\nexport default function Upload() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [getUnique_ID, setUnique_ID] = useState('');\r\n\r\n    const [getContent_file_label, setContent_file_label] = useState('');\r\n    const [getContent_file_alert, setContent_file_alert] = useState('');\r\n    const [getContent_file, setContent_file] = useState(null);\r\n    const [getFile_Title, setFile_Title] = useState('');\r\n    const [getFile_UploadProgress, setFile_UploadProgress] = useState(0);\r\n    const [getCancelToken, setCancelToken] = useState(null);\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const titleRef = useRef();\r\n\r\n    useEffect(() => {\r\n        setContent_file_label('Select any MP4 file');\r\n        loadUnique_ID();\r\n    }, []);\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if (acceptedFiles.length) {\r\n            const { size, type, name } = acceptedFiles[0];\r\n            // console.log(acceptedFiles[0]);\r\n            if (\"video\" != type.split('/')[0]) {\r\n                setContent_file_alert(\"Please select video file\");\r\n                setContent_file_label('Select any MP4 file');\r\n            } else {\r\n                document.getElementById(\"content_file\").removeAttribute('required');\r\n                setContent_file_alert(\"Size: \" + bytesToSize(size));\r\n                setContent_file_label(name);\r\n                setContent_file(acceptedFiles[0]);\r\n            }\r\n        }\r\n    }, []);\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, multiple: false });\r\n    const loadUnique_ID = () => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/UniquID`)\r\n            .then(res => {\r\n                setUnique_ID(res.data.Id);\r\n                setIsLoading(false);\r\n                // console.log(res.data.Id);\r\n            }).catch(err => {\r\n                setError('Error load unique ID');\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const change_file = (event) => {\r\n        if (event.currentTarget.files) {\r\n            if (event.currentTarget.files.length) {\r\n                const { size, type, name } = event.currentTarget.files[0];\r\n                if (\"video\" != type.split('/')[0]) {\r\n                    setContent_file_alert(\"Please select video file\");\r\n                    setContent_file_label('Select any MP4 file');\r\n                } else {\r\n                    setContent_file_alert(\"Size: \" + bytesToSize(size));\r\n                    setContent_file_label(name);\r\n                    setContent_file(event.currentTarget.files[0]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const bytesToSize = (bytes) => {\r\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes == 0) return '0 Byte';\r\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    };\r\n    const UploadProgress = (progressEvent) => {\r\n        var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n        setFile_UploadProgress(percentCompleted);\r\n    };\r\n    const handleSubmit = (event) => {\r\n        setError('');\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n        const isValid = form.checkValidity();\r\n        if (isValid === false) {\r\n            setError(\"Please provide all field\");\r\n            ToastAlert(\"Please provide all field\", 'i');\r\n            setIsLoading(false);\r\n        } else {\r\n            console.log(\"Ready for upload to server\");\r\n            let formData = new FormData();\r\n            formData.append('body', getContent_file);\r\n            formData.append('uid', getUnique_ID);\r\n            formData.append('file_name', getContent_file_label);\r\n            formData.append('file_title', getFile_Title);\r\n\r\n            const data = { uid: getUnique_ID, file_name: getContent_file_label, file_title: getFile_Title };\r\n            const CancelToken = axios.CancelToken;\r\n            const source = CancelToken.source();\r\n            setCancelToken(source);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                },\r\n                cancelToken: source.token,\r\n                onUploadProgress: function (progressEvent) { UploadProgress(progressEvent); }\r\n            };\r\n\r\n            axios.post(`${baseurl}api/Mpeg/UploadFile`, formData, config).then(function (res) {\r\n                setError('File uploaded successfully.');\r\n                setIsLoading(false);\r\n                ResetAll();\r\n                ToastAlert(\"File uploaded successfully.\", 'i');\r\n                // console.log('File uploaded successfully.');\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                setError('Error post data');\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n        setValidated(true);\r\n    };\r\n    const Cancelupload = () => {\r\n        if (getCancelToken != null) {\r\n            getCancelToken.cancel();\r\n            ResetAll();\r\n        }\r\n    };\r\n    const ResetAll = () => {\r\n        setTimeout(() => {\r\n            loadUnique_ID();\r\n            setContent_file_alert('');\r\n            setContent_file_label('Select any MP4 file');\r\n            setContent_file(null);\r\n            setFile_UploadProgress(0);\r\n            titleRef.current.value = \"\";\r\n            document.querySelector(\"#content_file\").value = '';\r\n            document.getElementById(\"content_file\").setAttribute('required', '');\r\n            setValidated(false);\r\n            setCancelToken(null);\r\n        }, 1000, true);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Upload\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Upload File <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                                <Form.Group controlId=\"Unique_ID\">\r\n                                    <Form.Label>Unique ID</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue={getUnique_ID} placeholder=\"Unique ID\" required readOnly />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"File_Title\">\r\n                                    <Form.Label>File Title</Form.Label>\r\n                                    <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"File title\" required\r\n                                        defaultValue={getFile_Title}\r\n                                        onChange={(e) => { setFile_Title(e.target.value); }} ref={titleRef} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-0\">\r\n                                    <Form.Label>Choose File</Form.Label>\r\n                                    <Form.File name=\"content_file\" id=\"content_file\" custom>\r\n                                        <Form.File.Input required onChange={change_file} />\r\n                                        <Form.File.Label data-browse=\"Browse File\">\r\n                                            {getContent_file_label}\r\n                                        </Form.File.Label>\r\n                                        <Form.Text className=\"text-muted\">\r\n                                            {getContent_file_alert}\r\n                                        </Form.Text>\r\n                                    </Form.File>\r\n                                    <ProgressBar variant=\"success\" animated now={getFile_UploadProgress} />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"dragdrop-frm-group\">\r\n                                    <div {...getRootProps()}>\r\n                                        <input id=\"content_file_drop\" {...getInputProps()} />\r\n                                        <p>Drag 'n' drop some file here, or click to select files</p>\r\n                                    </div>\r\n                                </Form.Group>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" >\r\n                                    <MDBIcon far icon=\"save\" size=\"lg\" />&nbsp;&nbsp;Submit\r\n                                </MDBBtn>\r\n                                <MDBBtn type=\"button\" color=\"indigo\" size=\"sm\" onClick={Cancelupload}>\r\n                                    <MDBIcon icon=\"ban\" />&nbsp;&nbsp;Cancel Upload\r\n                                </MDBBtn>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Modal.scss';\r\nimport { Container, Col, Row, ListGroup, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function Modal({ show, list, onhide, hide_visible }) {\r\n    return (show && <Container fluid className=\"C_Modal\">\r\n        <Col className=\"text-center py-3\">\r\n            {hide_visible && <Button onClick={onhide} variant=\"dark\">Close</Button>}\r\n        </Col>\r\n        <ListGroup>\r\n            {\r\n                list.map((item, index) => {\r\n                    return <ListGroup.Item key={index}>{item}</ListGroup.Item>\r\n                })\r\n            }\r\n        </ListGroup>\r\n    </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, Component } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport Select from 'react-select'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Add.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { ToastAlert } from '../../Toast/Toast';\r\n\r\nexport default function Add({ onhide, data }) {\r\n    // https://react-select.com/home\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [validated, setValidated] = useState(false);\r\n    const txtChapterId = useRef(null);\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        // console.log(data);\r\n        if ('add' == data.e) {\r\n            loadClasses();\r\n            loadSubjects();\r\n            loadContents();\r\n        }\r\n        else if ('edit' == data.e) {\r\n            const { id, chapterName, classId, subjectId, contentID } = data.data;\r\n            txtChapterId.current.value = id;\r\n            elmChapter.current.value = chapterName;\r\n            loadClasses(classId);\r\n            loadSubjects(subjectId);\r\n            loadContents(contentID);\r\n        }\r\n        else if ('attach' == data.e) {\r\n         \r\n        }\r\n\r\n    }, []);\r\n    //#endregion\r\n    const handleSubmit = (event) => {\r\n        setError('');\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n        const isValid = form.checkValidity();\r\n        if (isValid === false || getSelSubject == null || getSelClass == null) {\r\n            setError(\"Please provide all field\");\r\n            setIsLoading(false);\r\n        } else {\r\n            const post_data = { id: txtChapterId.current.value, chapterName: elmChapter.current.value, subjectId: getSelSubject != null ? getSelSubject.value : null, classId: getSelClass != null ? getSelClass.value : null, contentID: getSelContentID != null ? getSelContentID.value : null };\r\n            // console.log(post_data);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                }\r\n            };\r\n            let body = null;\r\n            let post_url = null;\r\n            if ('add' == data.e || 'attach' == data.e) {\r\n                body = { ...post_data };\r\n                post_url = `${baseurl}api/mpeg/AddChapter`;\r\n            }\r\n            if ('edit' == data.e) {\r\n                body = { ...post_data };\r\n                post_url = `${baseurl}api/mpeg/PutChapter`;\r\n            }\r\n            if (post_url == null || body == null) return;\r\n            axios.post(post_url, body, config).then(res => {\r\n                setError(res.data.data);\r\n                setIsLoading(false);\r\n                ToastAlert(res.data.data, 'i');\r\n                onhide();\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                // console.log(err);\r\n                setIsLoading(false);\r\n                setError_Cls('Error to save data');\r\n            });\r\n        }\r\n        setValidated(true);\r\n        isValidate_Subject(getSelSubject);\r\n        isValidate_Class(getSelClass);\r\n        // isValidate_ContentID(getSelContentID);\r\n    };\r\n    const elmChapter = useRef(null);\r\n    //#region Subject Vars\r\n    const Subject_options = [\r\n        { value: '1', label: 'Item 1' },\r\n        { value: '2', label: 'Item 2' }\r\n    ];\r\n    const [getSelSubject, setSelSubject] = useState(null);\r\n    const handleChange_Subject = (e) => {\r\n        setSelSubject(e);\r\n        if (isValidate_Subject_Init.current) {\r\n            isValidate_Subject(e);\r\n        }\r\n    };\r\n    const elmSubject = useRef(null);\r\n    const isValidate_Subject_Init = useRef(false);\r\n    const isValidate_Subject = (data) => {\r\n        LooksGoodShowHide(data, elmSubject, isValidate_Subject_Init);\r\n    };\r\n    const [getAllSub, setAllSub] = useState([]);\r\n    const loadSubjects = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ id, subjectName }) => {\r\n                    return { value: id, label: subjectName }\r\n                });\r\n                setAllSub(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelSubject(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Subject');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    //#region Class Vars\r\n    const Class_options = [\r\n        { value: '3', label: 'Item 3' },\r\n        { value: '4', label: 'Item 4' }\r\n    ];\r\n    const [getSelClass, setSelClass] = useState(null);\r\n    const handleChange_Class = (e) => {\r\n        setSelClass(e);\r\n        if (isValidate_Class_Init.current) {\r\n            isValidate_Class(e);\r\n        }\r\n    };\r\n    const elmClass = useRef(null);\r\n    const isValidate_Class_Init = useRef(false);\r\n    const isValidate_Class = data => {\r\n        LooksGoodShowHide(data, elmClass, isValidate_Class_Init);\r\n    };\r\n    const [getAllCls, setAllClass] = useState([]);\r\n    const loadClasses = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ id, className }) => {\r\n                    return { value: id, label: className }\r\n                });\r\n                setAllClass(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelClass(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Class');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    //#region ContentID Vars\r\n    const ContentID_options = [\r\n        { value: '5', label: 'Item 5' },\r\n        { value: '6', label: 'Item 6' }\r\n    ];\r\n    const [getSelContentID, setSelContentID] = useState(null);\r\n    const handleChange_ContentID = (e) => {\r\n        setSelContentID(e);\r\n        if (isValidate_ContentID_Init.current) {\r\n            isValidate_ContentID(e);\r\n        }\r\n    };\r\n    const elmContentID = useRef(null);\r\n    const isValidate_ContentID_Init = useRef(false);\r\n    const isValidate_ContentID = data => {\r\n        LooksGoodShowHide(data, elmContentID, isValidate_ContentID_Init);\r\n    };\r\n    const [getAllContents, setAllContents] = useState([]);\r\n    const loadContents = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        const _params = {\r\n            _id\r\n        };\r\n        axios.get(`${baseurl}api/mpeg/getContent`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ contentID }) => {\r\n                    return { value: contentID, label: contentID }\r\n                });\r\n                data.unshift({ value: null, label: 'None' });\r\n                setAllContents(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelContentID(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Class');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    const LooksGoodShowHide = (data, refElm, refValidateInit) => {\r\n        if (refElm.current) {\r\n            let elm = refElm.current.select.controlRef;\r\n            if (elm) {\r\n                refValidateInit.current = true;\r\n                if (data == null) {\r\n                    elm.style.borderColor = \"#dc3545\";  //red\r\n                } else {\r\n                    elm.style.borderColor = \"#28a745\"; // green\r\n                    let lookGoodElm = elm.parentNode.nextSibling\r\n                    if (lookGoodElm) {\r\n                        if (lookGoodElm.classList.contains('valid-feedback')) {\r\n                            lookGoodElm.style.display = 'block';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddChap_Add\">\r\n            <Row>\r\n                <Col className=\"col-md-8 col-lg-6 pt-3 mx-auto\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Add chapter <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                                <input type=\"hidden\" ref={txtChapterId} />\r\n                                <Form.Group controlId=\"chapterName\">\r\n                                    <Form.Label>Chapter Name</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue=\"\" ref={elmChapter} placeholder=\"Chapter Name\" required />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"subject\">\r\n                                    <Form.Label>Subject</Form.Label>\r\n                                    <Select value={getSelSubject} options={getAllSub} onChange={handleChange_Subject} ref={elmSubject} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"class\">\r\n                                    <Form.Label>Class</Form.Label>\r\n                                    <Select value={getSelClass} options={getAllCls} onChange={handleChange_Class} ref={elmClass} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"contentID\">\r\n                                    <Form.Label>content ID</Form.Label>\r\n                                    <Select value={getSelContentID} options={getAllContents} onChange={handleChange_ContentID} ref={elmContentID} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" >\r\n                                    <MDBIcon far icon=\"save\" size=\"lg\" />&nbsp;&nbsp;Submit\r\n                                </MDBBtn>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" onClick={onhide} >\r\n                                    <MDBIcon icon=\"times-circle\" size=\"lg\" />&nbsp;&nbsp;Close\r\n                                </MDBBtn>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Col, Row, Table, Button, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport './Conversion.scss';\r\nimport Select from 'react-select'\r\nimport axios from 'axios';\r\nimport Modal from '../Modal/Modal';\r\nimport Loading from '../Loading/Loading';\r\nimport Player from './../Player/Player';\r\nimport Add from '../AddChap/Add/Add';\r\nimport { ToastAlert } from '../Toast/Toast';\r\n\r\nexport default function Conversion(props) {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [getContent, setContent] = useState([]);\r\n    const [getSelectedLimit, setSelectedLimit] = useState(null);\r\n    let CProgressTimer = useRef(null);\r\n    let LazyKeyupTimer = useRef(null);\r\n    let contentInput = useRef(null);\r\n    let contentInputT = useRef(null);\r\n    let contentInputF = useRef(null);\r\n\r\n    const [getModalData, setModalData] = useState([]);\r\n    const [getShowModal, setShowModal] = useState(false);\r\n    const [getShowModalHideBtn, setShowModalHideBtn] = useState(false);\r\n    const [getPageItems, setPageItems] = useState([]);\r\n    const [getContentParams, setContentParams] = useState({\r\n        \"pageindex\": 0,\r\n        \"limit\": 5\r\n    });\r\n    const Limitoptions = [\r\n        { value: '5', label: '5' },\r\n        { value: '10', label: '10' },\r\n        { value: '50', label: '50' },\r\n        { value: '100', label: '100' }\r\n    ];\r\n\r\n    const [getLoadPlayer, setLoadPlayer] = useState(false);\r\n    const [getPlayerContentID, setPlayerContentID] = useState(null);\r\n\r\n    const [getshowAdd, setshowAdd] = useState(false);\r\n    const [getAddData, setAddData] = useState({});\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadContent(getContentParams);\r\n        setSelectedLimit({ value: '5', label: '5' });\r\n    }, []);\r\n    //#endregion\r\n\r\n    const loadContent = (_params) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getContentPage`, {\r\n            params: _params\r\n        }).then(res => {\r\n            setContent(res.data.data);\r\n            let { pageindex, totalPage } = res.data;\r\n            let PageItems = [];\r\n            for (let p = 0; p < totalPage; p++) {\r\n                PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>{p + 1}</Pagination.Item>);\r\n            }\r\n            setPageItems(PageItems);\r\n            setIsLoading(false);\r\n            setError('');\r\n            // console.log(res.data);\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            setError('Error loading Content');\r\n        });\r\n    };\r\n    const pageChange = p_index => {\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, \"pageindex\": p_index };\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const LazyKeyup = (_callback) => {\r\n        clearTimeout(LazyKeyupTimer.current);\r\n        LazyKeyupTimer.current = setTimeout(() => {\r\n            _callback();\r\n            // _callback.call(this, _args);\r\n        }, 1000);\r\n    };\r\n    const searchByContentID = _contentID => {\r\n        contentInputT.current.value = '';\r\n        contentInputF.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentID\": _contentID, \"pageindex\": 0 };\r\n                delete data[\"contentTitle\"];\r\n                delete data[\"contentFileName\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n    const searchByContentTitle = _contentTitle => {\r\n        contentInput.current.value = '';\r\n        contentInputF.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentTitle\": _contentTitle, \"pageindex\": 0 };\r\n                delete data[\"contentID\"];\r\n                delete data[\"contentFileName\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n    const orderByThis = (orderby, desc) => {\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, orderby, desc };\r\n            // console.log(data);\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const handleChange_limit = (e) => {\r\n        setSelectedLimit(e);\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, \"limit\": e.value, \"pageindex\": 0 };\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const searchByContentFile = _contentFileName => {\r\n        contentInput.current.value = '';\r\n        contentInputT.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentFileName\": _contentFileName, \"pageindex\": 0 };\r\n                delete data[\"contentID\"];\r\n                delete data[\"contentTitle\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n\r\n    const update_modal = (msg, is_reset) => {\r\n        if (msg == null) {\r\n            setModalData([]);\r\n            return;\r\n        }\r\n        if ('string' === typeof msg) {\r\n            if (!is_reset) {\r\n                setModalData(prevState => [msg, ...prevState]);\r\n            } else {\r\n                setModalData([msg]);\r\n            }\r\n        }\r\n    };\r\n    const Start_Click = ({ contentID, contentFileName }, e) => {\r\n        if ('start' === e) {\r\n            setShowModal(true);\r\n            axios.get(`${baseurl}api/mpeg/MediaInfo/${contentID}`, {\r\n                params: {\r\n                    fname: contentFileName,\r\n                }\r\n            }).then(res => {\r\n                // console.log(res);\r\n                let { duration, fps, frame } = res.data;\r\n                if (typeof duration === 'undefined') {\r\n                    update_modal(`Video not exist!`, false);\r\n                    setShowModalHideBtn(true);\r\n                    return;\r\n                }\r\n                update_modal('Ready for Conversion...', false);\r\n                update_modal(`Video duration ${duration}, fps ${fps} and frame ${frame}`, false);\r\n                CreateKey(contentID, function () {\r\n                    Convertfile(contentID, contentFileName);\r\n                    frame_progress(contentID, res.data);\r\n                });\r\n            }).catch(err => {\r\n                console.log(err);\r\n                update_modal(err, false);\r\n                setShowModalHideBtn(true);\r\n            });\r\n        }\r\n        else if ('progress' === e) {\r\n            setShowModal(true);\r\n            axios.get(`${baseurl}api/mpeg/MediaInfo/${contentID}`, {\r\n                params: {\r\n                    fname: contentFileName,\r\n                }\r\n            })\r\n                .then(res => {\r\n                    let { duration, fps, frame } = res.data;\r\n                    if (typeof duration === 'undefined') {\r\n                        update_modal(`Video not exist!`, false);\r\n                        setShowModalHideBtn(true);\r\n                        return;\r\n                    }\r\n                    update_modal(`Video duration ${duration}, fps ${fps} and frame ${frame}`, false);\r\n                    frame_progress(contentID, res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    update_modal(err, false);\r\n                    setShowModalHideBtn(true);\r\n                });\r\n        }\r\n        else if ('restore' === e) {\r\n            // setShowModal(true);\r\n            RestoreKey2SD(contentID);\r\n        }\r\n        else if ('remove' === e) {\r\n            // setShowModal(true);\r\n            RemoveKeyFromSD(contentID);\r\n        }\r\n        else if ('delete' === e) {\r\n            if (confirm('are you sure to delete ' + contentID)) {\r\n                Deletecontent(contentID);\r\n            }\r\n        }\r\n        else if ('play' === e) {\r\n            setPlayerContentID(contentID);\r\n            setLoadPlayer(true);\r\n        }\r\n        else if ('attach' === e) {\r\n\r\n        }\r\n    };\r\n    const CreateKey = (contentID, callback) => {\r\n        update_modal('Ready for generate key file...', false);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/CreateKey`, body, config).then(res => {\r\n            // console.log(res);\r\n            update_modal('key generated successfully', false);\r\n            ToastAlert('key generated successfully', 'i');\r\n            callback();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const Convertfile = (contentID, contentFileName) => {\r\n        update_modal('Ready for encryption...', false);\r\n        axios.get(`${baseurl}api/mpeg/Conversion/${contentID}`, {\r\n            params: {\r\n                fname: contentFileName,\r\n            }\r\n        }).then(res => {\r\n            // console.log(res);\r\n            update_modal('video file encrypted successfully...', false);\r\n            ToastAlert('video file encrypted successfully', 'i');\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const frame_progress = (contentID, { frame }) => {\r\n        update_modal('keep watching the encryption progress...', false);\r\n        CProgressTimer.current = setInterval(() => {\r\n            axios.get(`${baseurl}api/mpeg/ConversionProgressInfo/${contentID}`, {\r\n                params: {}\r\n            }).then(res => {\r\n                // console.log(res.data);\r\n                const { status, currentFrame } = res.data;\r\n                if ('continue' === status) {\r\n                    let percent = parseInt((currentFrame / frame) * 100);\r\n                    // setCProgress(percent + '%');\r\n                    update_modal(`encryption progress ${percent}%`, false);\r\n                }\r\n                else if ('end' === status) {\r\n                    // console.log('end');\r\n                    update_modal(`encryption progress 100% completed`, false);\r\n                    ConversionEnded(contentID, function () {\r\n                        clearInterval(CProgressTimer.current);\r\n                        setShowModalHideBtn(true);\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                clearInterval(CProgressTimer.current);\r\n                update_modal(err, false);\r\n                setShowModalHideBtn(true);\r\n            });\r\n        }, 10000);\r\n    };\r\n    const ConversionEnded = (contentID, callback) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/ConversionEnded`, body, config).then(res => {\r\n            console.log(res);\r\n            update_modal(res.data.data, false);\r\n            ToastAlert(res.data.data, 'i');\r\n            callback();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const RestoreKey2SD = (contentID) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/RestoreKey2SD`, body, config).then(res => {\r\n            // console.log(res);\r\n            // update_modal(res.data.data, false);\r\n            // setShowModalHideBtn(true);\r\n            ToastAlert(res.data.data,'i');\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const Deletecontent = (contentID) => {\r\n        setIsLoading(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/Deletecontent`, body, config).then(res => {\r\n            setIsLoading(false);\r\n            // console.log(res);\r\n            ToastAlert(res.data.data,'i');\r\n            loadContent(getContentParams);\r\n        }).catch(err => {\r\n            setError('Error');\r\n            setIsLoading(false);\r\n            // console.log(err);\r\n            loadContent(getContentParams);\r\n        });\r\n    };\r\n    const RemoveKeyFromSD = (contentID) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/RemoveKeyFromSD`, body, config).then(res => {\r\n            // console.log(res);\r\n            // update_modal(res.data.data, false);\r\n            // setShowModalHideBtn(true);\r\n            ToastAlert(res.data.data,'i');\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const hideModal = () => {\r\n        update_modal(null, true);\r\n        setShowModal(false);\r\n        setShowModalHideBtn(false);\r\n        loadContent(getContentParams);\r\n    };\r\n    const hidePlayer = () => {\r\n        setLoadPlayer(false);\r\n    };\r\n    const hideAddForm = () => {\r\n        setshowAdd(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Conversion\">\r\n            <Player show={getLoadPlayer} contentID={getPlayerContentID} onhide={hidePlayer} />\r\n            <Modal show={getShowModal} list={getModalData} onhide={hideModal} hide_visible={getShowModalHideBtn} />\r\n            <Row>\r\n                {\r\n                    getshowAdd ? <Add onhide={hideAddForm} data={getAddData} /> : null\r\n                }\r\n            </Row>\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-12 pt-3\">\r\n                    <span className=\"loading-error\">{getError}</span>\r\n                    {\r\n                        getIsLoading ? <Loading /> : null\r\n                    }\r\n                </Col>\r\n                <Col className=\"col-12 pt-3\">\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content ID\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by ID\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentID(e.target.value); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content Title\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by Title\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentTitle(e.target.value); }}\r\n                                                ref={contentInputT}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        File Name\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by File Name\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentFile(e.target.value); }}\r\n                                                ref={contentInputF}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div></th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Action\r\n                                        <Dropdown>\r\n                                            <Dropdown.Toggle size=\"sm\" variant=\"light\" id=\"dropdown-basic\">\r\n                                                Sort By &nbsp;&nbsp;\r\n                                            </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentID', 'false'); }}>ID</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentID', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentTitle', 'false'); }}>Title</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentTitle', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentFileName', 'false'); }}>File Name</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentFileName', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                getContent.map((item, index) => {\r\n                                    return <tr key={index}>\r\n                                        <td>{item.contentID}</td>\r\n                                        <td>{item.contentTitle}</td>\r\n                                        <td>{item.contentFileName}</td>\r\n                                        <td className=\"action-box\">{\r\n                                            item.IsConversion == '0' ?\r\n                                                <span>\r\n                                                    <Button variant=\"outline-info\" size=\"sm\" className=\"mr-1 mb-1\" onClick={() => Start_Click(item, 'start')}>Start</Button>\r\n                                                    <Button variant=\"outline-danger\" size=\"sm\" className=\"mb-1\" onClick={() => Start_Click(item, 'delete')}>Delete</Button>\r\n                                                </span> :\r\n                                                item.IsConversion == '1' ?\r\n                                                    <Button variant=\"outline-info\" size=\"sm\" onClick={() => Start_Click(item, 'progress')}>Progress</Button> :\r\n                                                    <span>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle variant=\"info\" size=\"sm\" id=\"dropdown-content\" className=\"mr-1 mb-1\">\r\n                                                                Content &nbsp;\r\n                                                            </Dropdown.Toggle>\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item onClick={() => Start_Click(item, 'play')}>Play</Dropdown.Item>\r\n                                                                {/* <Dropdown.Item onClick={() => Start_Click(item, 'attach')}>Attach Chapter</Dropdown.Item> */}\r\n                                                                <Dropdown.Item className=\"danger\" onClick={() => Start_Click(item, 'delete')}>Delete</Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle variant=\"info\" size=\"sm\" id=\"dropdown-key\" className=\"mb-1\">\r\n                                                                Key &nbsp;\r\n                                                            </Dropdown.Toggle>\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item onClick={() => Start_Click(item, 'restore')}>Restore to device</Dropdown.Item>\r\n                                                                <Dropdown.Item className=\"danger\" onClick={() => Start_Click(item, 'remove')}>Remove from device</Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                    </span>\r\n                                        }\r\n                                        </td>\r\n                                    </tr>;\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-4 pt-3\">\r\n                    <table className=\"lmt\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"y\"> Limit: </div>\r\n                                    <Select value={getSelectedLimit} className=\"x\" options={Limitoptions} onChange={handleChange_limit} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n                <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n                    <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddCsub.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { ToastAlert } from '../Toast/Toast';\r\n\r\nexport default function AddCsub() {\r\n    // https://mdbootstrap.com/docs/react/content/icons-list/\r\n    // https://mdbootstrap.com/docs/react/content/icons-usage/\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    //#region Class\r\n    const [getIsLoading_Cls, setIsLoading_Cls] = useState(false);\r\n    const [getError_Cls, setError_Cls] = useState('');\r\n    const [getAllCls, setAllClass] = useState([]);\r\n    let tblCls = useRef(null);\r\n    let tblClsHeader = useRef(null);\r\n\r\n    const [getIsEditCls, setIsEditCls] = useState(false);\r\n    let txtCls = useRef(null);\r\n    let txtClsId = useRef(null);\r\n    //#endregion\r\n\r\n    //#region Subject\r\n    const [getIsLoading_Sub, setIsLoading_Sub] = useState(false);\r\n    const [getError_Sub, setError_Sub] = useState('');\r\n    const [getAllSub, setAllSub] = useState([]);\r\n    let tblSub = useRef(null);\r\n    let tblSubHeader = useRef(null);\r\n\r\n    const [getIsEditSub, setIsEditSub] = useState(false);\r\n    let txtSub = useRef(null);\r\n    let txtSubId = useRef(null);\r\n    //#endregion\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadClasses();\r\n        loadSubjects();\r\n    }, []);\r\n    //#endregion\r\n    const loadClasses = () => {\r\n        setIsLoading_Cls(true);\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setAllClass(res.data.data);\r\n                Calcwidth('cls');\r\n                setIsLoading_Cls(false);\r\n                setError_Cls('');\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setIsLoading_Cls(false);\r\n                setError_Cls('Error loading Class');\r\n            });\r\n    };\r\n    const loadSubjects = () => {\r\n        setIsLoading_Sub(true);\r\n        setError_Sub('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setAllSub(res.data.data);\r\n                Calcwidth('sub');\r\n                setIsLoading_Sub(false);\r\n                setError_Sub('');\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setIsLoading_Sub(false);\r\n                setError_Sub('Error loading Subject');\r\n            });\r\n    };\r\n    const PostCls = ({ name, id, e }) => {\r\n        setIsLoading_Cls(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        let body = null;\r\n        let post_url = null;\r\n\r\n        if ('update_cls' === e) {\r\n            body = { name, id };\r\n            post_url = `${baseurl}api/mpeg/PutClass`;\r\n        }\r\n        else if ('add_cls' === e) {\r\n            body = { name };\r\n            post_url = `${baseurl}api/mpeg/AddClass`;\r\n        }\r\n        else if ('delete_cls' === e) {\r\n            body = { id };\r\n            post_url = `${baseurl}api/mpeg/RemoveClass`;\r\n        }\r\n        if (post_url == null || body == null) return;\r\n        axios.post(post_url, body, config).then(res => {\r\n            setError_Cls(res.data.data);\r\n            // console.log(res);\r\n            ToastAlert(res.data.data, 'info');\r\n            loadClasses();\r\n        }).catch(err => {\r\n            // console.log(err);\r\n            setError_Cls('Error to save data');\r\n        });\r\n    };\r\n    const PostSub = ({ name, id, e }) => {\r\n        setIsLoading_Sub(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        let body = null;\r\n        let post_url = null;\r\n\r\n        if ('update_sub' === e) {\r\n            body = { name, id };\r\n            post_url = `${baseurl}api/mpeg/PutSubject`;\r\n        }\r\n        else if ('add_sub' === e) {\r\n            body = { name };\r\n            post_url = `${baseurl}api/mpeg/AddSubject`;\r\n        }\r\n        else if ('delete_sub' === e) {\r\n            body = { id };\r\n            post_url = `${baseurl}api/mpeg/RemoveSubject`;\r\n        }\r\n        if (post_url == null || body == null) return;\r\n        axios.post(post_url, body, config).then(res => {\r\n            setError_Sub(res.data.data);\r\n            // console.log(res);\r\n            loadSubjects();\r\n            ToastAlert(res.data.data, 'info');\r\n        }).catch(err => {\r\n            // console.log(err);\r\n            setError_Sub('Error to save data');\r\n        });\r\n    };\r\n    const Action_Click = ({ id, className, subjectName }, e) => {\r\n        if ('edit_cls' === e) {\r\n            // console.log(id, className, 'edit_cls');\r\n            txtClsId.current.value = id;\r\n            txtCls.current.value = className;\r\n            setIsEditCls(true);\r\n            highlight_Edit(id);\r\n        }\r\n        else if ('update_cls' === e) {\r\n            // console.log('update_cls', txtClsId.current.value, txtCls.current.value);\r\n            if (txtCls.current.value == '') return;\r\n            if (txtClsId.current.value == '') return;\r\n            PostCls({ name: txtCls.current.value, id: txtClsId.current.value, e });\r\n            setTimeout(() => {\r\n                txtClsId.current.value = '';\r\n                txtCls.current.value = '';\r\n                setIsEditCls(false);\r\n                highlight_Edit(null);\r\n            }, 200);\r\n        }\r\n        else if ('delete_cls' === e) {\r\n            // console.log(id, 'delete_cls');\r\n            if (id == '') return;\r\n            PostCls({ id, e });\r\n        }\r\n        else if ('add_cls' === e) {\r\n            // console.log('add_cls', txtCls.current.value);\r\n            if (txtCls.current.value == '') {\r\n                ToastAlert('Please provide class name', 'w');\r\n                return;\r\n            }\r\n            PostCls({ name: txtCls.current.value, e });\r\n            setTimeout(() => {\r\n                txtCls.current.value = '';\r\n            }, 200);\r\n        }\r\n        else if ('edit_sub' === e) {\r\n            // console.log(id, subjectName, 'edit_sub');\r\n            txtSubId.current.value = id;\r\n            txtSub.current.value = subjectName;\r\n            setIsEditSub(true);\r\n            highlight_Edit_Sub(id);\r\n        }\r\n        else if ('update_sub' === e) {\r\n            // console.log('update_sub', txtSubId.current.value, txtSub.current.value);\r\n            if (txtSub.current.value == '') return;\r\n            if (txtSubId.current.value == '') return;\r\n            PostSub({ name: txtSub.current.value, id: txtSubId.current.value, e });\r\n            setTimeout(() => {\r\n                txtSubId.current.value = '';\r\n                txtSub.current.value = '';\r\n                setIsEditSub(false);\r\n                highlight_Edit(null);\r\n                highlight_Edit_Sub(null);\r\n            }, 200);\r\n        }\r\n        else if ('delete_sub' === e) {\r\n            if (id == '') return;\r\n            PostSub({ id, e });\r\n        }\r\n        else if ('add_sub' === e) {\r\n            if (txtSub.current.value == '') {\r\n                ToastAlert('Please provide subject name', 'w');\r\n                return;\r\n            }\r\n            PostSub({ name: txtSub.current.value, e });\r\n            setTimeout(() => {\r\n                txtSub.current.value = '';\r\n            }, 200);\r\n        }\r\n    };\r\n    const Calcwidth = (e) => {\r\n        if ('cls' === e) {\r\n            if (typeof tblCls.current === 'undefined') return;\r\n            let h = parseInt(tblCls.current.clientHeight);\r\n            let h_parent = parseInt(tblCls.current.parentElement.clientHeight);\r\n            if (typeof tblClsHeader.current === 'undefined') return;\r\n            if (h > h_parent) {\r\n                tblClsHeader.current.style.borderRight = '.9rem solid #cecece';\r\n                // tblClsHeader.current.style.width = '98%';\r\n            } else {\r\n                tblClsHeader.current.style.borderRight = '0rem solid #cecece';\r\n                // tblClsHeader.current.style.width = '100%';\r\n            }\r\n        } else if ('sub' === e) {\r\n            if (typeof tblSub.current === 'undefined') return;\r\n            let h = parseInt(tblSub.current.clientHeight);\r\n            let h_parent = parseInt(tblSub.current.parentElement.clientHeight);\r\n            if (typeof tblClsHeader.current === 'undefined') return;\r\n            if (h > h_parent) {\r\n                tblSubHeader.current.style.borderRight = '.9rem solid #cecece';\r\n            }\r\n            else {\r\n                tblSubHeader.current.style.borderRight = '0rem solid #cecece';\r\n            }\r\n        }\r\n    };\r\n    const highlight_Edit = (id) => {\r\n        document.querySelectorAll('.tr_cls').forEach(i => {\r\n            i.classList.remove('active');\r\n        });\r\n        if (id)\r\n            document.querySelector('.tr_cls_' + id).classList.add('active');\r\n    };\r\n    const highlight_Edit_Sub = (id) => {\r\n        document.querySelectorAll('.tr_sub').forEach(i => {\r\n            i.classList.remove('active');\r\n        });\r\n        if (id)\r\n            document.querySelector('.tr_sub_' + id).classList.add('active');\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddCsub\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-sm-12 col-md-10 col-lg-6 pt-3 mx-auto\">\r\n                    <Table striped bordered hover className=\"mb-0\" ref={tblClsHeader}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"3\">\r\n                                    Class List\r\n                                    <span className=\"loading-error\">{getError_Cls}</span>\r\n                                    {\r\n                                        getIsLoading_Cls ? <Loading /> : null\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style={{ width: '10%' }}>#</th>\r\n                                <th style={{ width: '70%' }}>Description</th>\r\n                                <th style={{ width: '20%' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblCls} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getAllCls.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_cls tr_cls_' + item.id}>\r\n                                            <td style={{ width: '10%' }}>{index + 1}</td>\r\n                                            <td style={{ width: '70%' }}>{item.className}</td>\r\n                                            <td style={{ width: '20%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit_cls')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Delete Class\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_cls')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <Form noValidate>\r\n                        <Table striped bordered hover className=\"mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td style={{ width: '10%' }}></td>\r\n                                    <td style={{ width: '70%' }} className=\"py-1\">\r\n                                        <Form.Group controlId=\"Class_Name\" className=\"my-0\">\r\n                                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Class Name\" required\r\n                                                defaultValue=\"\" ref={txtCls} />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td className=\"actions py-1\" style={{ width: '20%' }}>\r\n                                        <input type=\"hidden\" ref={txtClsId} />\r\n                                        {getIsEditCls ?\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'update_cls')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"save\" className=\"ml-2\" /> Update\r\n                                            </MDBBtn> :\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_cls')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" /> Add\r\n                                            </MDBBtn>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n                    </Form>\r\n                </Col>\r\n                <Col className=\"col-sm-12 col-md-10 col-lg-6 pt-3 mx-auto Subject\">\r\n                    <Table striped bordered hover className=\"mb-0\" ref={tblSubHeader}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"3\">\r\n                                    Subject List\r\n                                    <span className=\"loading-error\">{getError_Sub}</span>\r\n                                    {\r\n                                        getIsLoading_Sub ? <Loading /> : null\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style={{ width: '10%' }}>#</th>\r\n                                <th style={{ width: '70%' }}>Description</th>\r\n                                <th style={{ width: '20%' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblSub} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getAllSub.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_sub tr_sub_' + item.id}>\r\n                                            <td style={{ width: '10%' }}>{index + 1}</td>\r\n                                            <td style={{ width: '70%' }}>{item.subjectName}</td>\r\n                                            <td style={{ width: '20%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit_sub')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Delete Class\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_sub')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <Form noValidate>\r\n                        <Table striped bordered hover className=\"mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td style={{ width: '10%' }}></td>\r\n                                    <td style={{ width: '70%' }} className=\"py-1\">\r\n                                        <Form.Group controlId=\"Subject_Name\" className=\"my-0\">\r\n                                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Subject Name\" required\r\n                                                defaultValue=\"\" ref={txtSub} />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td className=\"actions py-1\" style={{ width: '20%' }}>\r\n                                        <input type=\"hidden\" ref={txtSubId} />\r\n                                        {getIsEditSub ?\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'update_sub')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"save\" className=\"ml-2\" /> Update\r\n                                            </MDBBtn> :\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_sub')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" /> Add\r\n                                            </MDBBtn>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, Component } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport Select from 'react-select'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddChap.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport Add from './Add/Add';\r\n\r\nexport default function AddChap() {\r\n    // https://react-select.com/home\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    let contentInput = useRef(null);\r\n    const [getRecords, setRecords] = useState([]);\r\n    const [getSelectedLimit, setSelectedLimit] = useState(null);\r\n    let tblRecords = useRef(null);\r\n    let LazyKeyupTimer = useRef(null);\r\n    const [getPageItems, setPageItems] = useState([]);\r\n    const [getChapterParams, setChapterParams] = useState({\r\n        \"pageindex\": 0,\r\n        \"limit\": 10\r\n    });\r\n    const Limitoptions = [\r\n        { value: '10', label: '10' },\r\n        { value: '50', label: '50' },\r\n        { value: '100', label: '100' },\r\n    ]\r\n    const [getshowAdd, setshowAdd] = useState(false);\r\n    const [getAddData, setAddData] = useState({});\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadChapters(getChapterParams);\r\n        setSelectedLimit({ value: '10', label: '10' });\r\n    }, []);\r\n    //#endregion  \r\n    const loadChapters = (_params) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getChapterFilter`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                setRecords(res.data.data);\r\n                let { pageindex, totalPage } = res.data;\r\n                //#region Pagination\r\n                let PageItems = [];\r\n                if (parseInt(pageindex) > 0) {\r\n                    PageItems.push(<Pagination.Item key={'prev'} onClick={() => { pageChange(parseInt(pageindex) - 1) }}>\r\n                        <MDBIcon icon=\"angle-double-left\" size=\"lg\" />\r\n                    </Pagination.Item>);\r\n                }\r\n                for (let p = 0; p < totalPage; p++) {\r\n                    PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>\r\n                        {parseInt(p) + 1}\r\n                    </Pagination.Item>);\r\n                }\r\n                if (parseInt(pageindex) < parseInt(totalPage)) {\r\n                    PageItems.push(<Pagination.Item key={'next'} onClick={() => { pageChange(parseInt(pageindex) + 1) }}>\r\n                        <MDBIcon icon=\"angle-double-right\" size=\"lg\" />\r\n                    </Pagination.Item>);\r\n                }\r\n                //#endregion\r\n                setPageItems(PageItems);\r\n                setIsLoading(false);\r\n                setError('');\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Chapter');\r\n            });\r\n    };\r\n    const pageChange = p_index => {\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, \"pageindex\": p_index };\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const orderByThis = (orderby, desc) => {\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, orderby, desc,\"pageindex\": 0 };\r\n            // console.log(data);\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const searchBy = (_val, e) => {\r\n        // console.log(_val, e);\r\n        if ('chap' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"chapterName\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('cls' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"className\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('sub' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"subjectName\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('content_id' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"contentID\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n    };\r\n    const LazyKeyup = (_callback) => {\r\n        clearTimeout(LazyKeyupTimer.current);\r\n        LazyKeyupTimer.current = setTimeout(() => {\r\n            _callback();\r\n            // _callback.call(this, _args);\r\n        }, 1000);\r\n    };\r\n    const handleChange_limit = (e) => {\r\n        setSelectedLimit(e);\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, \"limit\": e.value, \"pageindex\": 0 };\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const Action_Click = (item, e) => {\r\n        if ('add_new' == e) {\r\n            setAddData({\r\n                e: 'add'\r\n            });\r\n            setshowAdd(true);\r\n        }\r\n        else if ('edit' == e) {\r\n            setAddData({\r\n                e: 'edit',\r\n                data: item\r\n            });\r\n            setshowAdd(true);\r\n        }\r\n        else if ('remove' == e) {\r\n            if (!confirm('are you sure to delete?')) return;\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                }\r\n            };\r\n            let body = { id: item.id };\r\n            let post_url = `${baseurl}api/mpeg/RemoveChapter`;\r\n            if (post_url == null || body == null) return;\r\n            axios.post(post_url, body, config).then(res => {\r\n                setError(res.data.data);\r\n                setIsLoading(false);\r\n                loadChapters(getChapterParams);\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                // console.log(err);\r\n                setIsLoading(false);\r\n                setError_Cls('Error to delete data');\r\n            });\r\n        }\r\n    };\r\n    const hideAddForm = () => {\r\n        loadChapters(getChapterParams);\r\n        setshowAdd(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddChap\">\r\n            <Row>\r\n                {\r\n                    getshowAdd ? <Add onhide={hideAddForm} data={getAddData} /> : null\r\n                }\r\n            </Row>\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-12 pt-3\">\r\n                    <span className=\"loading-error\">{getError}</span>\r\n                    {\r\n                        getIsLoading ? <Loading /> : null\r\n                    }\r\n                </Col>\r\n                <Col className=\"col-12\">\r\n                    <Table striped bordered hover className=\"mb-0\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '30%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Chapter\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'chap'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '10%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Class\r\n                                    <InputGroup size=\"sm\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'cls'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '15%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Subject\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'sub'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '30%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content ID\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'content_id'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '15%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Action\r\n                                    <Dropdown>\r\n                                            <Dropdown.Toggle size=\"sm\" variant=\"light\" id=\"dropdown-basic\" className=\"w-100 m-0\">\r\n                                                Sort By &nbsp;&nbsp;\r\n                                        </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('chapterName', 'false'); }}>Chapter</Button>\r\n                                                        <Button onClick={() => { orderByThis('chapterName', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('classId', 'false'); }}>Class</Button>\r\n                                                        <Button onClick={() => { orderByThis('classId', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('subjectId', 'false'); }}>Subject</Button>\r\n                                                        <Button onClick={() => { orderByThis('subjectId', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentID', 'false'); }}>contentID</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentID', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblRecords} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getRecords.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_cls tr_cls_' + item.id}>\r\n                                            <td style={{ width: '30%' }}>{item.chapterName}</td>\r\n                                            <td style={{ width: '10%' }}>{item.className}</td>\r\n                                            <td style={{ width: '15%' }}>{item.subjectName}</td>\r\n                                            <td style={{ width: '30%' }}>{item.contentID}</td>\r\n                                            <td style={{ width: '15%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"Change\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Remove\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'remove')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"col-4 pt-3\">\r\n                    <table className=\"lmt\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"y\"> Limit: </div>\r\n                                    <Select value={getSelectedLimit} className=\"x\" options={Limitoptions} onChange={handleChange_limit} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n                <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n                    <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n                </Col>\r\n                <Col className=\"col-12 pt-3\">\r\n                    <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_new')} color=\"indigo\" className=\"btnAdd\">\r\n                        <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" />&nbsp; Add New\r\n                    </MDBBtn>\r\n                    <p>\r\n                        <br />\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport './Settings.scss';\r\n\r\nexport default function Settings() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [secret, setSecret] = useState('');\r\n    const [havepassword, setHavepassword] = useState(false);\r\n\r\n    useEffect(() => {\r\n        SQliteHavePassword();\r\n    }, []);\r\n    const SQliteHavePassword = () => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/SQliteHavePassword`)\r\n            .then(res => {\r\n                setHavepassword(res.data.data);\r\n                setIsLoading(false);\r\n                // console.log(res.data);\r\n            }).catch(err => {\r\n                setError('Error load SQliteHavePassword');\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSubmit = type => {\r\n        const _params = {\r\n            secret,\r\n            type\r\n        };\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/SQliteChangePassword`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                // console.log(res.data.data);\r\n                setError(res.data.data);\r\n                SQliteHavePassword();\r\n                setSecret('');\r\n            }).catch(err => {\r\n                setError('Error');\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"C_Settings\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            DB Encryption\r\n                            {\r\n                                havepassword ?\r\n                                    <MDBIcon icon=\"unlock\" size=\"2x\" className=\"float-right\" /> :\r\n                                    <MDBIcon icon=\"lock-open\" size=\"2x\" className=\"float-right\" />\r\n                            }\r\n\r\n                            <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate>\r\n                                <Form.Group controlId=\"Secret\">\r\n                                    <Form.Label>Secret</Form.Label>\r\n                                    <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Secret\" required\r\n                                        value={secret}\r\n                                        onChange={(e) => { setSecret(e.target.value); }} />\r\n                                </Form.Group>\r\n                                {\r\n                                    havepassword ?\r\n                                        <MDBBtn type=\"submit\" color=\"indigo\" size=\"md\" onClick={() => handleSubmit('remove')}>\r\n                                            <MDBIcon icon=\"lock-open\" size=\"2x\" />\r\n                                    &nbsp;&nbsp;Remove Password\r\n                                </MDBBtn> :\r\n                                        <MDBBtn type=\"submit\" color=\"indigo\" size=\"md\" onClick={() => handleSubmit('add')}>\r\n                                            <MDBIcon icon=\"unlock\" size=\"2x\" />\r\n                                &nbsp;&nbsp;Add Password\r\n                            </MDBBtn>\r\n                                }\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\n// import styled from \"styled-components\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ffmpeg.scss';\r\nimport Entry from \"./Entry/Entry\";\r\nimport Home from \"./Home/Home\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport Upload from \"./Admin/Upload/Upload\";\r\nimport Conversion from \"./Admin/Conversion/Conversion\";\r\nimport AddCsub from \"./Admin/AddCsub/AddCsub\";\r\nimport AddChap from \"./Admin/AddChap/AddChap\";\r\nimport Settings from \"./Admin/Settings/Settings\";\r\n\r\nexport function Routes(props) {\r\n    return (\r\n        <Fragment>\r\n            <Route path=\"/\" exact>\r\n                {\r\n                    <Entry />\r\n                    // <Admin />\r\n                }\r\n            </Route>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            <Switch>\r\n                <Route path=\"/home\" exact component={Home} />\r\n                <Route path=\"/admin/upload\" exact component={Upload} />\r\n                <Route path=\"/admin/conversion\" exact component={Conversion} />\r\n                <Route path=\"/admin/addclsnsub\" exact component={AddCsub} />\r\n                <Route path=\"/admin/addchap\" exact component={AddChap} />\r\n                <Route path=\"/admin/settings\" exact component={Settings} />\r\n                <Route path=\"/admin/test\" exact render={() => { return <h3>Test</h3> }} />\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function RoutesUser() {\r\n    return (\r\n        <Fragment>\r\n            <Route path=\"/\" exact>\r\n                {\r\n                    <Entry />\r\n                }\r\n            </Route>\r\n            <Route path=\"/home\" exact component={Home} />\r\n            <Route path=\"/admin\" exact render={() => { return <h3>This is an user app</h3> }} />\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom'; // BrowserRouter  HashRouter\r\n\r\nimport {Routes, RoutesUser} from './ffmpeg/Routes';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n         {\r\n           <Routes />\r\n          // <RoutesUser />\r\n         } \r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport axios from 'axios';\r\n\r\n//#region Demo\r\n// axios.defaults.baseURL = \"https://jsonplaceholder.typicode.com\";\r\n// axios.defaults.headers.common['Auth'] = 'AUTH 56';\r\n// axios.defaults.headers.post['content'] = 'CONTENT XX'\r\n\r\n// axios.interceptors.request.use(req => {\r\n//     // console.log({req});\r\n//     return req;\r\n// }, error => {\r\n//     console.log(error);\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n// axios.interceptors.response.use(res => {\r\n//     // console.log({res});\r\n//     return res;\r\n// });\r\n//#endregion\r\nconsole.clear();\r\nlet publish = window.publish || false;\r\nif(publish == true){\r\n    window.ffmpeg_baseurl = window.location.origin + \"/\";\r\n} else {\r\n    window.ffmpeg_baseurl = \"http://localhost:50017/\";\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}