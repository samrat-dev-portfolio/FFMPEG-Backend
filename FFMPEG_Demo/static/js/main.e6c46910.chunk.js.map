{"version":3,"sources":["ffmpeg/Entry/Entry.js","ffmpeg/Home/Header/Header.js","ffmpeg/Home/ProgressAlert/ProgressAlert.js","ffmpeg/Home/Content/Content.js","ffmpeg/Admin/Player/Player.js","ffmpeg/Home/Home.js","ffmpeg/Admin/Menubar/Menubar.js","ffmpeg/Admin/Admin.js","ffmpeg/Admin/Loading/Loading.js","ffmpeg/Admin/Upload/Upload.js","ffmpeg/Admin/Modal/Modal.js","ffmpeg/Admin/AddChap/Add/Add.js","ffmpeg/Admin/Conversion/Conversion.js","ffmpeg/Admin/AddCsub/AddCsub.js","ffmpeg/Admin/AddChap/AddChap.js","ffmpeg/Routes.js","App.js","index.js"],"names":["Entry","Container","fluid","className","Row","Col","to","color","Header","props","selected_class","selected_chapter","ProgressAlert","alert","Content","loading_class","enabled","my_class","loading_subject","my_subject","loading_chapter","my_chapter","Player","show","onhide","contentID","chapter","baseurl","window","ffmpeg_baseurl","playerRef","React","useRef","playerWrapperRef","useState","getM3u8Url","setM3u8Url","useEffect","Resize","actualWidth","innerWidth","document","documentElement","clientWidth","body","offsetWidth","innerHeight","clientHeight","offsetHeight","current","style","width","w","onresize","ref","size","onClick","icon","length","srcoff","xsrc","src","autoPlay","controls","height","onEnded","classList","add","setTimeout","Home","getLoading_class","setLoading_class","getClasses","setClasses","getSelectedClass","setSelectedClass","getSelectedClassName","setSelectedClassName","getSelectedChapterName","setSelectedChapterName","getLoading_subject","setLoading_subject","getSubjects","setSubjects","getSelectedSubject","setSelectedSubject","getLoading_chapter","setLoading_chapter","getChapters","setChapters","body_blue","loadClasses","loadSubject","query","URLSearchParams","location","search","cls","get","sub","cls_name","chap_name","urlParamCreation","loadChapter","axios","then","res","data","catch","err","params","click_classItem","_item","id","click_subjectItem","click_chapterItem","_e","chapterName","highlight","setPlayerContentID","setPlayerTitle","setLoadPlayer","_className","_target","target","querySelectorAll","forEach","i","remove","history","push","getLoadPlayer","getPlayerContentID","getPlayerTitle","map","item","index","subjectName","e","Menubar","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","href","Admin","body_blue_reset","Loading","viewBox","preserveAspectRatio","transform","attributeName","type","values","keyTimes","dur","repeatCount","d","fill","Upload","getIsLoading","setIsLoading","getError","setError","getUnique_ID","setUnique_ID","getContent_file_label","setContent_file_label","getContent_file_alert","setContent_file_alert","getContent_file","setContent_file","getFile_Title","setFile_Title","getFile_UploadProgress","setFile_UploadProgress","getCancelToken","setCancelToken","validated","setValidated","titleRef","loadUnique_ID","onDrop","useCallback","acceptedFiles","name","split","getElementById","removeAttribute","bytesToSize","useDropzone","multiple","getRootProps","getInputProps","isDragActive","Id","bytes","parseInt","Math","floor","log","round","pow","ResetAll","value","querySelector","setAttribute","Card","Body","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","console","formData","FormData","append","source","CancelToken","config","headers","cancelToken","token","onUploadProgress","progressEvent","percentCompleted","loaded","total","UploadProgress","post","Group","controlId","Label","Control","defaultValue","placeholder","required","readOnly","Feedback","autoComplete","onChange","File","custom","Input","files","data-browse","Text","ProgressBar","variant","animated","now","far","cancel","Modal","list","hide_visible","Button","ListGroup","Item","Add","txtChapterId","loadSubjects","loadContents","classId","subjectId","elmChapter","getSelSubject","setSelSubject","elmSubject","isValidate_Subject_Init","isValidate_Subject","LooksGoodShowHide","getAllSub","setAllSub","_id","label","selOption","find","getSelClass","setSelClass","elmClass","isValidate_Class_Init","isValidate_Class","getAllCls","setAllClass","getSelContentID","setSelContentID","elmContentID","isValidate_ContentID_Init","isValidate_ContentID","getAllContents","setAllContents","_params","unshift","refElm","refValidateInit","elm","select","controlRef","borderColor","lookGoodElm","parentNode","nextSibling","contains","display","post_data","post_url","setError_Cls","options","Conversion","getContent","setContent","getSelectedLimit","setSelectedLimit","CProgressTimer","LazyKeyupTimer","contentInput","contentInputT","contentInputF","getModalData","setModalData","getShowModal","setShowModal","getShowModalHideBtn","setShowModalHideBtn","getPageItems","setPageItems","getContentParams","setContentParams","getshowAdd","setshowAdd","getAddData","loadContent","pageindex","totalPage","PageItems","p","Pagination","pageChange","active","p_index","prevData","LazyKeyup","_callback","clearTimeout","orderByThis","orderby","desc","update_modal","msg","is_reset","prevState","Start_Click","contentFileName","fname","duration","fps","frame","CreateKey","Convertfile","frame_progress","RestoreKey2SD","RemoveKeyFromSD","confirm","Deletecontent","callback","setInterval","status","currentFrame","percent","ConversionEnded","clearInterval","Table","striped","bordered","hover","InputGroup","FormControl","aria-label","aria-describedby","onKeyUp","_contentID","_contentTitle","_contentFileName","Dropdown","Menu","ButtonGroup","marginRight","contentTitle","IsConversion","AddCsub","getIsLoading_Cls","setIsLoading_Cls","getError_Cls","tblCls","tblClsHeader","getIsEditCls","setIsEditCls","txtCls","txtClsId","getIsLoading_Sub","setIsLoading_Sub","getError_Sub","setError_Sub","tblSub","tblSubHeader","getIsEditSub","setIsEditSub","txtSub","txtSubId","Calcwidth","PostCls","PostSub","Action_Click","highlight_Edit","highlight_Edit_Sub","h","h_parent","parentElement","borderRight","colSpan","title","AddChap","getRecords","setRecords","tblRecords","getChapterParams","setChapterParams","setAddData","loadChapters","searchBy","_val","Routes","path","exact","component","render","App","Component","clear","publish","origin","ReactDOM"],"mappings":"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","file":"static/js/main.e6c46910.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Entry.scss';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nexport default function Entry() {\r\n    return (\r\n        <Container fluid className=\"C_Entry bimg-page-1\">\r\n            <Row className=\"h-100\">\r\n                <Col className=\"col-9\"></Col>\r\n                <Col className=\"col-3 p-0\">\r\n                    <div className=\"home_btn_row\">\r\n                        <Link className=\"home_btn\" to=\"/home\">\r\n                            <MDBBtn color=\"amber\">\r\n                                Enter\r\n                            </MDBBtn>\r\n                        </Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Header.scss';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <Container fluid className=\"C_Header bimg-page-2 p-0\">\r\n            <Row className=\"h-100 gutter m-0\">\r\n                <Col className=\"col-6 logo-1\"></Col>\r\n                <Col className=\"col-6 space-1\">\r\n                    <div className=\"b-orange h-100\">\r\n                        <div className=\"h-100 row space-2 m-0\">\r\n                            <div className=\"col-4 pr-0 b-red content-box c-white d-flex center-xy\">\r\n                                {props.selected_class}\r\n                            </div>\r\n                            <div className=\"col-8 pl-0 b-green content-box c-white d-flex center-xy\">\r\n                                {props.selected_chapter}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './ProgressAlert.scss';\r\n\r\nexport default function ProgressAlert(props) {\r\n    return (\r\n        <span className=\"C_ProgressAlert progress-1\" >\r\n            {props.alert}\r\n        </span>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Content.scss';\r\nimport ProgressAlert from '../ProgressAlert/ProgressAlert';\r\n\r\nexport default function Content(props) {\r\n\r\n    return (\r\n        <Container fluid className=\"C_Content bimg-page-2 p-0\">\r\n            <Row className=\"h-100 gutter m-0\">\r\n                <Col className=\"col-12 b-orange py-1 b-radius-1 shadow-1\">\r\n                    <Row>\r\n                        <Col className=\"col-2 pl-4\">\r\n                            Shreni\r\n                        </Col>\r\n                        <Col className=\"col-3 pl-4\">\r\n                            Bishoy\r\n                        </Col>\r\n                        <Col className=\"col-7 pl-4\">\r\n                            Adhay Suchi\r\n                         </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col className=\"col-12 b-red b-radius-2 space-3\">\r\n                    <Row className=\"h-100 m-0\">\r\n                        <Col className=\"col-2 pr-0 content-box\">\r\n                            {\r\n                                props.loading_class.enabled ?\r\n                                    <ProgressAlert alert={props.loading_class.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-1\">\r\n                                    {props.my_class}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-3 pr-0 content-box\">\r\n                            {\r\n                                props.loading_subject.enabled ?\r\n                                    <ProgressAlert alert={props.loading_subject.alert} /> : null\r\n                            }\r\n                            <div className=\"h-100 b-color-1 b-radius-3\">\r\n                                <ul className=\"list-group grp-2\">\r\n                                    {props.my_subject}\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"col-7 pr-0 content-box\">\r\n                            {\r\n                                props.loading_chapter.enabled ?\r\n                                    <ProgressAlert alert={props.loading_chapter.alert} /> : null\r\n                            }\r\n                            <ul className=\"list-group grp-3\">\r\n                                {props.my_chapter}\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Col, Row, Table, Button, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactHlsPlayer from 'react-hls-player';\r\nimport './Player.scss';\r\n// import cross from '../../img/9.png';\r\nimport { MDBIcon, MDBBtn, MDBContainer, MDBNavbarNav, MDBNavbar } from \"mdbreact\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nexport default function Player({ show, onhide, contentID, chapter }) {\r\n    // https://www.npmjs.com/package/react-hls-player\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const playerRef = React.useRef();\r\n    const playerWrapperRef = React.useRef();\r\n    const [getM3u8Url, setM3u8Url] = useState('');\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n    const playVideo = () => {\r\n        playerRef.current.play();\r\n    };\r\n    const pauseVideo = () => {\r\n        playerRef.current.pause();\r\n    };\r\n    const toggleControls = () => {\r\n        playerRef.current.controls = !playerRef.current.controls;\r\n    };\r\n    const endedVideo = () => {\r\n        playerRef.current.classList.add('fadex');\r\n        setTimeout(() => {\r\n            onhide();\r\n        }, 3100);\r\n    };\r\n    const Resize = () => {\r\n        var actualWidth = window.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth ||\r\n            document.body.offsetWidth;\r\n\r\n        var actualHeight = window.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight ||\r\n            document.body.offsetHeight;\r\n        if (actualWidth < actualHeight) {\r\n            // console.log('w small');\r\n            if (typeof playerWrapperRef.current === 'undefined') return;\r\n            playerWrapperRef.current.style.width = '90%';\r\n        } else {\r\n            // console.log('h small');\r\n            if (typeof playerWrapperRef.current === 'undefined') return;\r\n            if (playerWrapperRef.current === null) return;\r\n            let w = ((3 / 4) * actualWidth) - 50;\r\n            playerWrapperRef.current.style.width = w + 'px';\r\n        }\r\n        // console.log(actualWidth, actualHeight);\r\n    };\r\n\r\n    //#region Hooks\r\n    useEffect(() => {\r\n        document.body.onresize = () => {\r\n            Resize();\r\n        };\r\n    }, []);\r\n    useEffect(() => {\r\n        if (contentID === null) return;\r\n        setM3u8Url(`${baseurl}api/mpeg/M3u8info/${contentID}`);\r\n        Resize();\r\n    }, [show]);\r\n    useEffect(() => {\r\n        // const fireOnVideoStart = () => {\r\n        //     // Do some stuff when the video starts/resumes playing\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('play', fireOnVideoStart);\r\n        // return playerRef.current.removeEventListener('play', fireOnVideoStart);\r\n    }, []);\r\n    useEffect(() => {\r\n        // const fireOnVideoEnd = () => {\r\n        //     // Do some stuff when the video ends\r\n        // };\r\n        // if (typeof playerWrapperRef.current === 'undefined') return;\r\n        // playerRef.current.addEventListener('ended', fireOnVideoEnd);\r\n        // return playerRef.current.removeEventListener('ended', fireOnVideoEnd);\r\n    }, []);\r\n    //#endregion\r\n\r\n    return (show && <Container fluid className=\"C_Player\">\r\n        <Col className=\"text-center py-3\">\r\n            <div className=\"player-wrapper\" ref={playerWrapperRef}>\r\n                <MDBContainer className=\"text-center\">\r\n                    <Row className=\"header\">\r\n                        <Col className=\"col-12 p-0\">\r\n                            <p className=\"m-0 h-100\">&nbsp;{chapter}</p>\r\n                            <MDBBtn className=\"exit\" color=\"mdb-color\" size=\"sm\" onClick={onhide}>\r\n                                <MDBIcon icon=\"times-circle\" />&nbsp;&nbsp;Close\r\n                            </MDBBtn>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"player-body\">\r\n                        {getM3u8Url.length > 0 ?\r\n                            <ReactHlsPlayer\r\n                                playerRef={playerRef}\r\n                                srcoff=\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"\r\n                                xsrc=\"http://localhost:50017/api/mpeg/M3u8info/20210417-020532-d829654b-bdaf-4c0c-bad6-dd7ce8326e31\"\r\n                                src={getM3u8Url}\r\n                                autoPlay={false}\r\n                                controls={true}\r\n                                width=\"100%\"\r\n                                height=\"auto\"\r\n                                onEnded={endedVideo}\r\n                            /> : null\r\n                        }\r\n                    </Row>\r\n                </MDBContainer>\r\n            </div>\r\n        </Col>\r\n    </Container>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Route, Switch, Link, Redirect } from \"react-router-dom\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './Header/Header';\r\nimport './Home.scss';\r\nimport Content from './Content/Content';\r\nimport axios from 'axios';\r\nimport Player from '../Admin/Player/Player';\r\n\r\nexport default function Home(props) {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n\r\n    const [getLoading_class, setLoading_class] = useState({ enabled: false, alert: '' });\r\n    const [getClasses, setClasses] = useState([]);\r\n    const [getSelectedClass, setSelectedClass] = useState('');\r\n    const [getSelectedClassName, setSelectedClassName] = useState('');\r\n    const [getSelectedChapterName, setSelectedChapterName] = useState('');\r\n\r\n    const [getLoading_subject, setLoading_subject] = useState({ enabled: false, alert: '' });\r\n    const [getSubjects, setSubjects] = useState([]);\r\n    const [getSelectedSubject, setSelectedSubject] = useState('');\r\n\r\n    const [getLoading_chapter, setLoading_chapter] = useState({ enabled: false, alert: '' });\r\n    const [getChapters, setChapters] = useState([]);\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    // https://www.digitalocean.com/community/tutorials/react-axios-react\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        body_blue();\r\n        loadClasses();\r\n        loadSubject();\r\n        const query = new URLSearchParams(props.location.search);\r\n        const cls = query.get('cls');\r\n        if (cls)\r\n            setSelectedClass(cls);\r\n\r\n        const sub = query.get('sub');\r\n        if (sub)\r\n            setSelectedSubject(sub);\r\n\r\n        const cls_name = query.get('cls_name');\r\n        if (cls_name)\r\n            setSelectedClassName(cls_name);\r\n        const chap_name = query.get('chap_name');\r\n        if (chap_name) {\r\n            setSelectedChapterName(chap_name);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n        if (getSelectedClass && getSelectedSubject) {\r\n            // console.log('change class, sub, load chapter');\r\n            loadChapter();\r\n        } else {\r\n            setLoading_chapter({ enabled: true, alert: 'Please Provide Class and subject' });\r\n        }\r\n    }, [getSelectedClass, getSelectedSubject]);\r\n    useEffect(() => {\r\n        urlParamCreation();\r\n    }, [getSelectedChapterName]);\r\n    //#endregion\r\n\r\n    //#region Load API\r\n    const loadClasses = () => {\r\n        setLoading_class({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setClasses(res.data.data);\r\n                setLoading_class({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);  \r\n            }).catch(err => {\r\n                setLoading_class({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadSubject = () => {\r\n        setLoading_subject({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setSubjects(res.data.data);\r\n                setLoading_subject({ enabled: false, alert: '' });\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setLoading_subject({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    const loadChapter = () => {\r\n        setLoading_chapter({ enabled: true, alert: 'Loading...' });\r\n        axios.get(`${baseurl}api/mpeg/getChapter`, {\r\n            params: {\r\n                cls: getSelectedClass,\r\n                sub: getSelectedSubject\r\n            }\r\n        })\r\n            .then(res => {\r\n                setChapters(res.data.data);\r\n                if (!res.data.data.length) {\r\n                    setLoading_chapter({ enabled: true, alert: 'No data Available' });\r\n                } else {\r\n                    setLoading_chapter({ enabled: false, alert: '' });\r\n                }\r\n                // console.log(res.data);\r\n            }).catch(err => {\r\n                setLoading_chapter({ enabled: true, alert: 'Error' });\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    //#region Create List View\r\n    const getClasses_view = () => {\r\n        let data = [];\r\n        data = getClasses.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_classItem(item) }}>Class {item.className}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getSubjects_view = () => {\r\n        let data = [];\r\n        data = getSubjects.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={() => { click_subjectItem(item) }}>{item.subjectName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const getChapters_view = () => {\r\n        let data = [];\r\n        data = getChapters.map((item, index) => {\r\n            return <li key={index} className=\"list-group-item\" onClick={(e) => { click_chapterItem(e, item) }}>{item.chapterName}</li>;\r\n        });\r\n        return data;\r\n    };\r\n    const click_classItem = (_item) => {\r\n        setSelectedClass(_item.id);\r\n        setSelectedClassName(`Class ${_item.className}`);\r\n    };\r\n    const click_subjectItem = (_item) => {\r\n        setSelectedSubject(_item.id);\r\n    };\r\n    const click_chapterItem = (_e, _item) => {\r\n        setSelectedChapterName(_item.chapterName);\r\n        highlight(_e, 'chapter_highlight');\r\n        if(_item.contentID == null) return;\r\n        setPlayerContentID(_item.contentID);\r\n        setPlayerTitle(_item.chapterName);\r\n        setLoadPlayer(true);\r\n    };\r\n    const highlight = (_e, _className) => {\r\n        var _target = _e.target;\r\n        document.querySelectorAll('.' + _className).forEach(i => {\r\n            i.classList.remove(_className);\r\n        });\r\n        _target.classList.add(_className);\r\n    };\r\n    const body_blue = () => {\r\n        document.body.classList.add('body-blue');\r\n    };\r\n    const urlParamCreation = () => {\r\n        props.history.push(`/home?cls=${getSelectedClass}&sub=${getSelectedSubject}&cls_name=${getSelectedClassName}&chap_name=${getSelectedChapterName}`);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Player\r\n    const [getLoadPlayer, setLoadPlayer] = useState(false);\r\n    const [getPlayerContentID, setPlayerContentID] = useState(null);\r\n    const [getPlayerTitle, setPlayerTitle] = useState(null);\r\n    const hidePlayer = () => {\r\n        setLoadPlayer(false);\r\n        setPlayerContentID(null);\r\n        setPlayerTitle(null);\r\n    };\r\n    //#endregion\r\n    return (\r\n        <>\r\n            <Player chapter={getPlayerTitle} show={getLoadPlayer} contentID={getPlayerContentID} onhide={hidePlayer} />\r\n            <Header selected_class={getSelectedClassName} selected_chapter={getSelectedChapterName} />\r\n            <Content\r\n                my_class={getClasses_view()} loading_class={getLoading_class}\r\n                my_subject={getSubjects_view()} loading_subject={getLoading_subject}\r\n                my_chapter={getChapters_view()} loading_chapter={getLoading_chapter}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, FormControl, Nav, Navbar, NavDropdown, Button } from 'react-bootstrap';\r\nimport './Menubar.scss';\r\n\r\nexport default function Menubar() {\r\n    useEffect(() => {\r\n        // check login\r\n    });\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"Menubar\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#admin\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#admin/upload\">Upload</Nav.Link>\r\n                    <Nav.Link href=\"#admin/conversion\">Conversion</Nav.Link>\r\n                    <Nav.Link href=\"#admin/addclsnsub\">Class-Subs</Nav.Link>\r\n                    <Nav.Link href=\"#admin/addchap\">Chapters</Nav.Link>\r\n                    {\r\n                        /*\r\n                        <NavDropdown title=\"Content\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#admin/mapchap\">Mapping Chapters</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        */\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Admin.scss';\r\nimport Menubar from './Menubar/Menubar';\r\n\r\nexport default function Admin() {\r\n    useEffect(() => {\r\n        body_blue_reset();\r\n    });\r\n\r\n    const body_blue_reset = () => {\r\n        document.body.classList.remove('body-blue');\r\n        document.body.classList.add('body-white');\r\n    };\r\n\r\n    return (\r\n        <div className=\"C_Admin\">\r\n            <Menubar />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Loading.scss';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"C_Loading\">\r\n            <svg                \r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                viewBox=\"0 0 100 100\"\r\n                preserveAspectRatio=\"xMidYMid\">\r\n                <g transform=\"translate(50 50)\">\r\n                    <g>\r\n                        <animateTransform attributeName=\"transform\" type=\"rotate\" values=\"0;45\" keyTimes=\"0;1\" dur=\"0.2s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <path d=\"M29.491524206117255 -5.5 L37.491524206117255 -5.5 L37.491524206117255 5.5 L29.491524206117255 5.5 A30 30 0 0 1 24.742744050198738 16.964569457146712 L24.742744050198738 16.964569457146712 L30.399598299691117 22.621423706639092 L22.621423706639096 30.399598299691114 L16.964569457146716 24.742744050198734 A30 30 0 0 1 5.5 29.491524206117255 L5.5 29.491524206117255 L5.5 37.491524206117255 L-5.499999999999997 37.491524206117255 L-5.499999999999997 29.491524206117255 A30 30 0 0 1 -16.964569457146705 24.742744050198738 L-16.964569457146705 24.742744050198738 L-22.621423706639085 30.399598299691117 L-30.399598299691117 22.621423706639092 L-24.742744050198738 16.964569457146712 A30 30 0 0 1 -29.491524206117255 5.500000000000009 L-29.491524206117255 5.500000000000009 L-37.491524206117255 5.50000000000001 L-37.491524206117255 -5.500000000000001 L-29.491524206117255 -5.500000000000002 A30 30 0 0 1 -24.742744050198738 -16.964569457146705 L-24.742744050198738 -16.964569457146705 L-30.399598299691117 -22.621423706639085 L-22.621423706639092 -30.399598299691117 L-16.964569457146712 -24.742744050198738 A30 30 0 0 1 -5.500000000000011 -29.491524206117255 L-5.500000000000011 -29.491524206117255 L-5.500000000000012 -37.491524206117255 L5.499999999999998 -37.491524206117255 L5.5 -29.491524206117255 A30 30 0 0 1 16.964569457146702 -24.74274405019874 L16.964569457146702 -24.74274405019874 L22.62142370663908 -30.39959829969112 L30.399598299691117 -22.6214237066391 L24.742744050198738 -16.964569457146716 A30 30 0 0 1 29.491524206117255 -5.500000000000013 M0 -20A20 20 0 1 0 0 20 A20 20 0 1 0 0 -20\" fill=\"#85a2b6\"></path>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, ProgressBar } from \"react-bootstrap\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Upload.scss';\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\n\r\nexport default function Upload() {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [getUnique_ID, setUnique_ID] = useState('');\r\n\r\n    const [getContent_file_label, setContent_file_label] = useState('');\r\n    const [getContent_file_alert, setContent_file_alert] = useState('');\r\n    const [getContent_file, setContent_file] = useState(null);\r\n    const [getFile_Title, setFile_Title] = useState('');\r\n    const [getFile_UploadProgress, setFile_UploadProgress] = useState(0);\r\n    const [getCancelToken, setCancelToken] = useState(null);\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const titleRef = useRef();\r\n\r\n    useEffect(() => {\r\n        setContent_file_label('Select any MP4 file');\r\n        loadUnique_ID();\r\n    }, []);\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if (acceptedFiles.length) {\r\n            const { size, type, name } = acceptedFiles[0];\r\n            // console.log(acceptedFiles[0]);\r\n            if (\"video\" != type.split('/')[0]) {\r\n                setContent_file_alert(\"Please select video file\");\r\n                setContent_file_label('Select any MP4 file');\r\n            } else {\r\n                document.getElementById(\"content_file\").removeAttribute('required');\r\n                setContent_file_alert(\"Size: \" + bytesToSize(size));\r\n                setContent_file_label(name);\r\n                setContent_file(acceptedFiles[0]);\r\n            }\r\n        }\r\n    }, []);\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, multiple: false });\r\n    const loadUnique_ID = () => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseurl}api/mpeg/UniquID`)\r\n            .then(res => {\r\n                setUnique_ID(res.data.Id);\r\n                setIsLoading(false);\r\n                // console.log(res.data.Id);\r\n            }).catch(err => {\r\n                setError('Error load unique ID');\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const change_file = (event) => {\r\n        if (event.currentTarget.files) {\r\n            if (event.currentTarget.files.length) {\r\n                const { size, type, name } = event.currentTarget.files[0];\r\n                if (\"video\" != type.split('/')[0]) {\r\n                    setContent_file_alert(\"Please select video file\");\r\n                    setContent_file_label('Select any MP4 file');\r\n                } else {\r\n                    setContent_file_alert(\"Size: \" + bytesToSize(size));\r\n                    setContent_file_label(name);\r\n                    setContent_file(event.currentTarget.files[0]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const bytesToSize = (bytes) => {\r\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes == 0) return '0 Byte';\r\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    };\r\n    const UploadProgress = (progressEvent) => {\r\n        var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n        setFile_UploadProgress(percentCompleted);\r\n    };\r\n    const handleSubmit = (event) => {\r\n        setError('');\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n        const isValid = form.checkValidity();\r\n        if (isValid === false) {\r\n            setError(\"Please provide all field\");\r\n            setIsLoading(false);\r\n        } else {\r\n            console.log(\"Ready for upload to server\");\r\n            let formData = new FormData();\r\n            formData.append('body', getContent_file);\r\n            formData.append('uid', getUnique_ID);\r\n            formData.append('file_name', getContent_file_label);\r\n            formData.append('file_title', getFile_Title);\r\n\r\n            const data = { uid: getUnique_ID, file_name: getContent_file_label, file_title: getFile_Title };\r\n            const CancelToken = axios.CancelToken;\r\n            const source = CancelToken.source();\r\n            setCancelToken(source);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                },\r\n                cancelToken: source.token,\r\n                onUploadProgress: function (progressEvent) { UploadProgress(progressEvent); }\r\n            };\r\n\r\n            axios.post(`${baseurl}api/Mpeg/UploadFile`, formData, config).then(function (res) {\r\n                setError('File uploaded successfully.');\r\n                setIsLoading(false);\r\n                ResetAll();\r\n                console.log('File uploaded successfully.');\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                setError('Error post data');\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n        setValidated(true);\r\n    };\r\n    const Cancelupload = () => {\r\n        if (getCancelToken != null) {\r\n            getCancelToken.cancel();\r\n            ResetAll();\r\n        }\r\n    };\r\n    const ResetAll = () => {\r\n        setTimeout(() => {\r\n            loadUnique_ID();\r\n            setContent_file_alert('');\r\n            setContent_file_label('Select any MP4 file');\r\n            setContent_file(null);\r\n            setFile_UploadProgress(0);\r\n            titleRef.current.value = \"\";\r\n            document.querySelector(\"#content_file\").value = '';\r\n            document.getElementById(\"content_file\").setAttribute('required', '');\r\n            setValidated(false);\r\n            setCancelToken(null);\r\n        }, 1000, true);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Upload\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-md-8 col-lg-6 pt-3\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Upload File <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                                <Form.Group controlId=\"Unique_ID\">\r\n                                    <Form.Label>Unique ID</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue={getUnique_ID} placeholder=\"Unique ID\" required readOnly />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"File_Title\">\r\n                                    <Form.Label>File Title</Form.Label>\r\n                                    <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"File title\" required\r\n                                        defaultValue={getFile_Title}\r\n                                        onChange={(e) => { setFile_Title(e.target.value); }} ref={titleRef} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-0\">\r\n                                    <Form.Label>Choose File</Form.Label>\r\n                                    <Form.File name=\"content_file\" id=\"content_file\" custom>\r\n                                        <Form.File.Input required onChange={change_file} />\r\n                                        <Form.File.Label data-browse=\"Browse File\">\r\n                                            {getContent_file_label}\r\n                                        </Form.File.Label>\r\n                                        <Form.Text className=\"text-muted\">\r\n                                            {getContent_file_alert}\r\n                                        </Form.Text>\r\n                                    </Form.File>\r\n                                    <ProgressBar variant=\"success\" animated now={getFile_UploadProgress} />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"dragdrop-frm-group\">\r\n                                    <div {...getRootProps()}>\r\n                                        <input id=\"content_file_drop\" {...getInputProps()} />\r\n                                        <p>Drag 'n' drop some file here, or click to select files</p>\r\n                                    </div>\r\n                                </Form.Group>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" >\r\n                                    <MDBIcon far icon=\"save\" size=\"lg\" />&nbsp;&nbsp;Submit\r\n                                </MDBBtn>\r\n                                <MDBBtn type=\"button\" color=\"indigo\" size=\"sm\" onClick={Cancelupload}>\r\n                                    <MDBIcon icon=\"ban\" />&nbsp;&nbsp;Cancel Upload\r\n                                </MDBBtn>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Modal.scss';\r\nimport { Container, Col, Row, ListGroup, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function Modal({ show, list, onhide, hide_visible }) {\r\n    return (show && <Container fluid className=\"C_Modal\">\r\n        <Col className=\"text-center py-3\">\r\n            {hide_visible && <Button onClick={onhide} variant=\"dark\">Close</Button>}\r\n        </Col>\r\n        <ListGroup>\r\n            {\r\n                list.map((item, index) => {\r\n                    return <ListGroup.Item key={index}>{item}</ListGroup.Item>\r\n                })\r\n            }\r\n        </ListGroup>\r\n    </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, Component } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport Select from 'react-select'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Add.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nexport default function Add({ onhide, data }) {\r\n    // https://react-select.com/home\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [validated, setValidated] = useState(false);\r\n    const txtChapterId = useRef(null);\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        // console.log(data);\r\n        if ('add' == data.e) {\r\n            loadClasses();\r\n            loadSubjects();\r\n            loadContents();\r\n        }\r\n        else if ('edit' == data.e) {\r\n            const { id, chapterName, classId, subjectId, contentID } = data.data;\r\n            txtChapterId.current.value = id;\r\n            elmChapter.current.value = chapterName;\r\n            loadClasses(classId);\r\n            loadSubjects(subjectId);\r\n            loadContents(contentID);\r\n        }\r\n        else if ('attach' == data.e) {\r\n         \r\n        }\r\n\r\n    }, []);\r\n    //#endregion\r\n    const handleSubmit = (event) => {\r\n        setError('');\r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n        const isValid = form.checkValidity();\r\n        if (isValid === false || getSelSubject == null || getSelClass == null) {\r\n            setError(\"Please provide all field\");\r\n            setIsLoading(false);\r\n        } else {\r\n            const post_data = { id: txtChapterId.current.value, chapterName: elmChapter.current.value, subjectId: getSelSubject != null ? getSelSubject.value : null, classId: getSelClass != null ? getSelClass.value : null, contentID: getSelContentID != null ? getSelContentID.value : null };\r\n            // console.log(post_data);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                }\r\n            };\r\n            let body = null;\r\n            let post_url = null;\r\n            if ('add' == data.e || 'attach' == data.e) {\r\n                body = { ...post_data };\r\n                post_url = `${baseurl}api/mpeg/AddChapter`;\r\n            }\r\n            if ('edit' == data.e) {\r\n                body = { ...post_data };\r\n                post_url = `${baseurl}api/mpeg/PutChapter`;\r\n            }\r\n            if (post_url == null || body == null) return;\r\n            axios.post(post_url, body, config).then(res => {\r\n                setError(res.data.data);\r\n                setIsLoading(false);\r\n                onhide();\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                // console.log(err);\r\n                setIsLoading(false);\r\n                setError_Cls('Error to save data');\r\n            });\r\n        }\r\n        setValidated(true);\r\n        isValidate_Subject(getSelSubject);\r\n        isValidate_Class(getSelClass);\r\n        // isValidate_ContentID(getSelContentID);\r\n    };\r\n    const elmChapter = useRef(null);\r\n    //#region Subject Vars\r\n    const Subject_options = [\r\n        { value: '1', label: 'Item 1' },\r\n        { value: '2', label: 'Item 2' }\r\n    ];\r\n    const [getSelSubject, setSelSubject] = useState(null);\r\n    const handleChange_Subject = (e) => {\r\n        setSelSubject(e);\r\n        if (isValidate_Subject_Init.current) {\r\n            isValidate_Subject(e);\r\n        }\r\n    };\r\n    const elmSubject = useRef(null);\r\n    const isValidate_Subject_Init = useRef(false);\r\n    const isValidate_Subject = (data) => {\r\n        LooksGoodShowHide(data, elmSubject, isValidate_Subject_Init);\r\n    };\r\n    const [getAllSub, setAllSub] = useState([]);\r\n    const loadSubjects = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ id, subjectName }) => {\r\n                    return { value: id, label: subjectName }\r\n                });\r\n                setAllSub(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelSubject(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Subject');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    //#region Class Vars\r\n    const Class_options = [\r\n        { value: '3', label: 'Item 3' },\r\n        { value: '4', label: 'Item 4' }\r\n    ];\r\n    const [getSelClass, setSelClass] = useState(null);\r\n    const handleChange_Class = (e) => {\r\n        setSelClass(e);\r\n        if (isValidate_Class_Init.current) {\r\n            isValidate_Class(e);\r\n        }\r\n    };\r\n    const elmClass = useRef(null);\r\n    const isValidate_Class_Init = useRef(false);\r\n    const isValidate_Class = data => {\r\n        LooksGoodShowHide(data, elmClass, isValidate_Class_Init);\r\n    };\r\n    const [getAllCls, setAllClass] = useState([]);\r\n    const loadClasses = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ id, className }) => {\r\n                    return { value: id, label: className }\r\n                });\r\n                setAllClass(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelClass(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Class');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    //#region ContentID Vars\r\n    const ContentID_options = [\r\n        { value: '5', label: 'Item 5' },\r\n        { value: '6', label: 'Item 6' }\r\n    ];\r\n    const [getSelContentID, setSelContentID] = useState(null);\r\n    const handleChange_ContentID = (e) => {\r\n        setSelContentID(e);\r\n        if (isValidate_ContentID_Init.current) {\r\n            isValidate_ContentID(e);\r\n        }\r\n    };\r\n    const elmContentID = useRef(null);\r\n    const isValidate_ContentID_Init = useRef(false);\r\n    const isValidate_ContentID = data => {\r\n        LooksGoodShowHide(data, elmContentID, isValidate_ContentID_Init);\r\n    };\r\n    const [getAllContents, setAllContents] = useState([]);\r\n    const loadContents = (_id) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        const _params = {\r\n            _id\r\n        };\r\n        axios.get(`${baseurl}api/mpeg/getContent`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                setError('');\r\n                // console.log(res.data.data);\r\n                var data = res.data.data.map(({ contentID }) => {\r\n                    return { value: contentID, label: contentID }\r\n                });\r\n                data.unshift({ value: null, label: 'None' });\r\n                setAllContents(data);\r\n                var selOption = data.find(i => i.value == _id);\r\n                setSelContentID(selOption);\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Class');\r\n            });\r\n    };\r\n    //#endregion\r\n\r\n    const LooksGoodShowHide = (data, refElm, refValidateInit) => {\r\n        if (refElm.current) {\r\n            let elm = refElm.current.select.controlRef;\r\n            if (elm) {\r\n                refValidateInit.current = true;\r\n                if (data == null) {\r\n                    elm.style.borderColor = \"#dc3545\";  //red\r\n                } else {\r\n                    elm.style.borderColor = \"#28a745\"; // green\r\n                    let lookGoodElm = elm.parentNode.nextSibling\r\n                    if (lookGoodElm) {\r\n                        if (lookGoodElm.classList.contains('valid-feedback')) {\r\n                            lookGoodElm.style.display = 'block';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddChap_Add\">\r\n            <Row>\r\n                <Col className=\"col-md-8 col-lg-6 pt-3 mx-auto\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Add chapter <span className=\"loading-error\">{getError}</span>\r\n                            {\r\n                                getIsLoading ? <Loading /> : null\r\n                            }\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                                <input type=\"hidden\" ref={txtChapterId} />\r\n                                <Form.Group controlId=\"chapterName\">\r\n                                    <Form.Label>Chapter Name</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue=\"\" ref={elmChapter} placeholder=\"Chapter Name\" required />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"subject\">\r\n                                    <Form.Label>Subject</Form.Label>\r\n                                    <Select value={getSelSubject} options={getAllSub} onChange={handleChange_Subject} ref={elmSubject} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"class\">\r\n                                    <Form.Label>Class</Form.Label>\r\n                                    <Select value={getSelClass} options={getAllCls} onChange={handleChange_Class} ref={elmClass} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"contentID\">\r\n                                    <Form.Label>content ID</Form.Label>\r\n                                    <Select value={getSelContentID} options={getAllContents} onChange={handleChange_ContentID} ref={elmContentID} />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" >\r\n                                    <MDBIcon far icon=\"save\" size=\"lg\" />&nbsp;&nbsp;Submit\r\n                                </MDBBtn>\r\n                                <MDBBtn type=\"submit\" color=\"indigo\" size=\"sm\" onClick={onhide} >\r\n                                    <MDBIcon icon=\"times-circle\" size=\"lg\" />&nbsp;&nbsp;Close\r\n                                </MDBBtn>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Col, Row, Table, Button, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from 'react-bootstrap';\r\nimport './Conversion.scss';\r\nimport Select from 'react-select'\r\nimport axios from 'axios';\r\nimport Modal from '../Modal/Modal';\r\nimport Loading from '../Loading/Loading';\r\nimport Player from './../Player/Player';\r\nimport Add from '../AddChap/Add/Add';\r\n\r\nexport default function Conversion(props) {\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    const [getContent, setContent] = useState([]);\r\n    const [getSelectedLimit, setSelectedLimit] = useState(null);\r\n    let CProgressTimer = useRef(null);\r\n    let LazyKeyupTimer = useRef(null);\r\n    let contentInput = useRef(null);\r\n    let contentInputT = useRef(null);\r\n    let contentInputF = useRef(null);\r\n\r\n    const [getModalData, setModalData] = useState([]);\r\n    const [getShowModal, setShowModal] = useState(false);\r\n    const [getShowModalHideBtn, setShowModalHideBtn] = useState(false);\r\n    const [getPageItems, setPageItems] = useState([]);\r\n    const [getContentParams, setContentParams] = useState({\r\n        \"pageindex\": 0,\r\n        \"limit\": 5\r\n    });\r\n    const Limitoptions = [\r\n        { value: '5', label: '5' },\r\n        { value: '10', label: '10' },\r\n        { value: '50', label: '50' },\r\n        { value: '100', label: '100' }\r\n    ];\r\n\r\n    const [getLoadPlayer, setLoadPlayer] = useState(false);\r\n    const [getPlayerContentID, setPlayerContentID] = useState(null);\r\n\r\n    const [getshowAdd, setshowAdd] = useState(false);\r\n    const [getAddData, setAddData] = useState({});\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadContent(getContentParams);\r\n        setSelectedLimit({ value: '5', label: '5' });\r\n    }, []);\r\n    //#endregion\r\n\r\n    const loadContent = (_params) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getContentPage`, {\r\n            params: _params\r\n        }).then(res => {\r\n            setContent(res.data.data);\r\n            let { pageindex, totalPage } = res.data;\r\n            let PageItems = [];\r\n            for (let p = 0; p < totalPage; p++) {\r\n                PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>{p + 1}</Pagination.Item>);\r\n            }\r\n            setPageItems(PageItems);\r\n            setIsLoading(false);\r\n            setError('');\r\n            // console.log(res.data);\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            setError('Error loading Content');\r\n        });\r\n    };\r\n    const pageChange = p_index => {\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, \"pageindex\": p_index };\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const LazyKeyup = (_callback) => {\r\n        clearTimeout(LazyKeyupTimer.current);\r\n        LazyKeyupTimer.current = setTimeout(() => {\r\n            _callback();\r\n            // _callback.call(this, _args);\r\n        }, 1000);\r\n    };\r\n    const searchByContentID = _contentID => {\r\n        contentInputT.current.value = '';\r\n        contentInputF.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentID\": _contentID, \"pageindex\": 0 };\r\n                delete data[\"contentTitle\"];\r\n                delete data[\"contentFileName\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n    const searchByContentTitle = _contentTitle => {\r\n        contentInput.current.value = '';\r\n        contentInputF.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentTitle\": _contentTitle, \"pageindex\": 0 };\r\n                delete data[\"contentID\"];\r\n                delete data[\"contentFileName\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n    const orderByThis = (orderby, desc) => {\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, orderby, desc };\r\n            // console.log(data);\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const handleChange_limit = (e) => {\r\n        setSelectedLimit(e);\r\n        setContentParams(prevData => {\r\n            let data = { ...prevData, \"limit\": e.value, \"pageindex\": 0 };\r\n            loadContent(data);\r\n            return data;\r\n        });\r\n    };\r\n    const searchByContentFile = _contentFileName => {\r\n        contentInput.current.value = '';\r\n        contentInputT.current.value = '';\r\n        LazyKeyup(() => {\r\n            setContentParams(prevData => {\r\n                let data = { ...prevData, \"contentFileName\": _contentFileName, \"pageindex\": 0 };\r\n                delete data[\"contentID\"];\r\n                delete data[\"contentTitle\"];\r\n                loadContent(data);\r\n                return data;\r\n            });\r\n        });\r\n    };\r\n\r\n    const update_modal = (msg, is_reset) => {\r\n        if (msg == null) {\r\n            setModalData([]);\r\n            return;\r\n        }\r\n        if ('string' === typeof msg) {\r\n            if (!is_reset) {\r\n                setModalData(prevState => [msg, ...prevState]);\r\n            } else {\r\n                setModalData([msg]);\r\n            }\r\n        }\r\n    };\r\n    const Start_Click = ({ contentID, contentFileName }, e) => {\r\n        if ('start' === e) {\r\n            setShowModal(true);\r\n            axios.get(`${baseurl}api/mpeg/MediaInfo/${contentID}`, {\r\n                params: {\r\n                    fname: contentFileName,\r\n                }\r\n            }).then(res => {\r\n                // console.log(res);\r\n                let { duration, fps, frame } = res.data;\r\n                if (typeof duration === 'undefined') {\r\n                    update_modal(`Video not exist!`, false);\r\n                    setShowModalHideBtn(true);\r\n                    return;\r\n                }\r\n                update_modal('Ready for Conversion...', false);\r\n                update_modal(`Video duration ${duration}, fps ${fps} and frame ${frame}`, false);\r\n                CreateKey(contentID, function () {\r\n                    Convertfile(contentID, contentFileName);\r\n                    frame_progress(contentID, res.data);\r\n                });\r\n            }).catch(err => {\r\n                console.log(err);\r\n                update_modal(err, false);\r\n                setShowModalHideBtn(true);\r\n            });\r\n        }\r\n        else if ('progress' === e) {\r\n            setShowModal(true);\r\n            axios.get(`${baseurl}api/mpeg/MediaInfo/${contentID}`, {\r\n                params: {\r\n                    fname: contentFileName,\r\n                }\r\n            })\r\n                .then(res => {\r\n                    let { duration, fps, frame } = res.data;\r\n                    if (typeof duration === 'undefined') {\r\n                        update_modal(`Video not exist!`, false);\r\n                        setShowModalHideBtn(true);\r\n                        return;\r\n                    }\r\n                    update_modal(`Video duration ${duration}, fps ${fps} and frame ${frame}`, false);\r\n                    frame_progress(contentID, res.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    update_modal(err, false);\r\n                    setShowModalHideBtn(true);\r\n                });\r\n        }\r\n        else if ('restore' === e) {\r\n            setShowModal(true);\r\n            RestoreKey2SD(contentID);\r\n        }\r\n        else if ('remove' === e) {\r\n            setShowModal(true);\r\n            RemoveKeyFromSD(contentID);\r\n        }\r\n        else if ('delete' === e) {\r\n            if (confirm('are you sure to delete ' + contentID)) {\r\n                Deletecontent(contentID);\r\n            }\r\n        }\r\n        else if ('play' === e) {\r\n            setPlayerContentID(contentID);\r\n            setLoadPlayer(true);\r\n        }\r\n        else if ('attach' === e) {\r\n\r\n        }\r\n    };\r\n    const CreateKey = (contentID, callback) => {\r\n        update_modal('Ready for generate key file...', false);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/CreateKey`, body, config).then(res => {\r\n            // console.log(res);\r\n            update_modal('key generated successfully', false);\r\n            callback();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const Convertfile = (contentID, contentFileName) => {\r\n        update_modal('Ready for encryption...', false);\r\n        axios.get(`${baseurl}api/mpeg/Conversion/${contentID}`, {\r\n            params: {\r\n                fname: contentFileName,\r\n            }\r\n        }).then(res => {\r\n            // console.log(res);\r\n            update_modal('video file encrypted successfully...', false);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const frame_progress = (contentID, { frame }) => {\r\n        update_modal('keep watching the encryption progress...', false);\r\n        CProgressTimer.current = setInterval(() => {\r\n            axios.get(`${baseurl}api/mpeg/ConversionProgressInfo/${contentID}`, {\r\n                params: {}\r\n            }).then(res => {\r\n                // console.log(res.data);\r\n                const { status, currentFrame } = res.data;\r\n                if ('continue' === status) {\r\n                    let percent = parseInt((currentFrame / frame) * 100);\r\n                    // setCProgress(percent + '%');\r\n                    update_modal(`encryption progress ${percent}%`, false);\r\n                }\r\n                else if ('end' === status) {\r\n                    // console.log('end');\r\n                    update_modal(`encryption progress 100% completed`, false);\r\n                    ConversionEnded(contentID, function () {\r\n                        clearInterval(CProgressTimer.current);\r\n                        setShowModalHideBtn(true);\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                clearInterval(CProgressTimer.current);\r\n                update_modal(err, false);\r\n                setShowModalHideBtn(true);\r\n            });\r\n        }, 10000);\r\n    };\r\n    const ConversionEnded = (contentID, callback) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/ConversionEnded`, body, config).then(res => {\r\n            // console.log(res);\r\n            update_modal(res.data.data, false);\r\n            callback();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const RestoreKey2SD = (contentID) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/RestoreKey2SD`, body, config).then(res => {\r\n            // console.log(res);\r\n            update_modal(res.data.data, false);\r\n            setShowModalHideBtn(true);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const Deletecontent = (contentID) => {\r\n        setIsLoading(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/Deletecontent`, body, config).then(res => {\r\n            setIsLoading(false);\r\n            // console.log(res);\r\n            loadContent(getContentParams);\r\n        }).catch(err => {\r\n            setError('Error');\r\n            setIsLoading(false);\r\n            // console.log(err);\r\n            loadContent(getContentParams);\r\n        });\r\n    };\r\n    const RemoveKeyFromSD = (contentID) => {\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        const body = { Id: contentID };\r\n        axios.post(`${baseurl}api/mpeg/RemoveKeyFromSD`, body, config).then(res => {\r\n            // console.log(res);\r\n            update_modal(res.data.data, false);\r\n            setShowModalHideBtn(true);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            update_modal(err, false);\r\n            setShowModalHideBtn(true);\r\n        });\r\n    };\r\n    const hideModal = () => {\r\n        update_modal(null, true);\r\n        setShowModal(false);\r\n        setShowModalHideBtn(false);\r\n        loadContent(getContentParams);\r\n    };\r\n    const hidePlayer = () => {\r\n        setLoadPlayer(false);\r\n    };\r\n    const hideAddForm = () => {\r\n        setshowAdd(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_Conversion\">\r\n            <Player show={getLoadPlayer} contentID={getPlayerContentID} onhide={hidePlayer} />\r\n            <Modal show={getShowModal} list={getModalData} onhide={hideModal} hide_visible={getShowModalHideBtn} />\r\n            <Row>\r\n                {\r\n                    getshowAdd ? <Add onhide={hideAddForm} data={getAddData} /> : null\r\n                }\r\n            </Row>\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-12 pt-3\">\r\n                    <span className=\"loading-error\">{getError}</span>\r\n                    {\r\n                        getIsLoading ? <Loading /> : null\r\n                    }\r\n                </Col>\r\n                <Col className=\"col-12 pt-3\">\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content ID\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by ID\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentID(e.target.value); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content Title\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by Title\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentTitle(e.target.value); }}\r\n                                                ref={contentInputT}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        File Name\r\n                                        <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search by File Name\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchByContentFile(e.target.value); }}\r\n                                                ref={contentInputF}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div></th>\r\n                                <th>\r\n                                    <div className=\"td-filter-box\">\r\n                                        Action\r\n                                        <Dropdown>\r\n                                            <Dropdown.Toggle size=\"sm\" variant=\"light\" id=\"dropdown-basic\">\r\n                                                Sort By &nbsp;&nbsp;\r\n                                            </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentID', 'false'); }}>ID</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentID', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentTitle', 'false'); }}>Title</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentTitle', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentFileName', 'false'); }}>File Name</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentFileName', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                getContent.map((item, index) => {\r\n                                    return <tr key={index}>\r\n                                        <td>{item.contentID}</td>\r\n                                        <td>{item.contentTitle}</td>\r\n                                        <td>{item.contentFileName}</td>\r\n                                        <td className=\"action-box\">{\r\n                                            item.IsConversion == '0' ?\r\n                                                <span>\r\n                                                    <Button variant=\"outline-info\" size=\"sm\" className=\"mr-1 mb-1\" onClick={() => Start_Click(item, 'start')}>Start</Button>\r\n                                                    <Button variant=\"outline-danger\" size=\"sm\" className=\"mb-1\" onClick={() => Start_Click(item, 'delete')}>Delete</Button>\r\n                                                </span> :\r\n                                                item.IsConversion == '1' ?\r\n                                                    <Button variant=\"outline-info\" size=\"sm\" onClick={() => Start_Click(item, 'progress')}>Progress</Button> :\r\n                                                    <span>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle variant=\"info\" size=\"sm\" id=\"dropdown-content\" className=\"mr-1 mb-1\">\r\n                                                                Content &nbsp;\r\n                                                            </Dropdown.Toggle>\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item onClick={() => Start_Click(item, 'play')}>Play</Dropdown.Item>\r\n                                                                {/* <Dropdown.Item onClick={() => Start_Click(item, 'attach')}>Attach Chapter</Dropdown.Item> */}\r\n                                                                <Dropdown.Item className=\"danger\" onClick={() => Start_Click(item, 'delete')}>Delete</Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle variant=\"info\" size=\"sm\" id=\"dropdown-key\" className=\"mb-1\">\r\n                                                                Key &nbsp;\r\n                                                            </Dropdown.Toggle>\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item onClick={() => Start_Click(item, 'restore')}>Restore to device</Dropdown.Item>\r\n                                                                <Dropdown.Item className=\"danger\" onClick={() => Start_Click(item, 'remove')}>Remove from device</Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                    </span>\r\n                                        }\r\n                                        </td>\r\n                                    </tr>;\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-4 pt-3\">\r\n                    <table className=\"lmt\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"y\"> Limit: </div>\r\n                                    <Select value={getSelectedLimit} className=\"x\" options={Limitoptions} onChange={handleChange_limit} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n                <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n                    <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddCsub.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nexport default function AddCsub() {\r\n    // https://mdbootstrap.com/docs/react/content/icons-list/\r\n    // https://mdbootstrap.com/docs/react/content/icons-usage/\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    //#region Class\r\n    const [getIsLoading_Cls, setIsLoading_Cls] = useState(false);\r\n    const [getError_Cls, setError_Cls] = useState('');\r\n    const [getAllCls, setAllClass] = useState([]);\r\n    let tblCls = useRef(null);\r\n    let tblClsHeader = useRef(null);\r\n\r\n    const [getIsEditCls, setIsEditCls] = useState(false);\r\n    let txtCls = useRef(null);\r\n    let txtClsId = useRef(null);\r\n    //#endregion\r\n\r\n    //#region Subject\r\n    const [getIsLoading_Sub, setIsLoading_Sub] = useState(false);\r\n    const [getError_Sub, setError_Sub] = useState('');\r\n    const [getAllSub, setAllSub] = useState([]);\r\n    let tblSub = useRef(null);\r\n    let tblSubHeader = useRef(null);\r\n\r\n    const [getIsEditSub, setIsEditSub] = useState(false);\r\n    let txtSub = useRef(null);\r\n    let txtSubId = useRef(null);\r\n    //#endregion\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadClasses();\r\n        loadSubjects();\r\n    }, []);\r\n    //#endregion\r\n    const loadClasses = () => {\r\n        setIsLoading_Cls(true);\r\n        axios.get(`${baseurl}api/mpeg/getClasses`)\r\n            .then(res => {\r\n                setAllClass(res.data.data);\r\n                Calcwidth('cls');\r\n                setIsLoading_Cls(false);\r\n                setError_Cls('');\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setIsLoading_Cls(false);\r\n                setError_Cls('Error loading Class');\r\n            });\r\n    };\r\n    const loadSubjects = () => {\r\n        setIsLoading_Sub(true);\r\n        setError_Sub('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getSubject`)\r\n            .then(res => {\r\n                setAllSub(res.data.data);\r\n                Calcwidth('sub');\r\n                setIsLoading_Sub(false);\r\n                setError_Sub('');\r\n                // console.log(res.data.data);\r\n            }).catch(err => {\r\n                setIsLoading_Sub(false);\r\n                setError_Sub('Error loading Subject');\r\n            });\r\n    };\r\n    const PostCls = ({ name, id, e }) => {\r\n        setIsLoading_Cls(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        let body = null;\r\n        let post_url = null;\r\n\r\n        if ('update_cls' === e) {\r\n            body = { name, id };\r\n            post_url = `${baseurl}api/mpeg/PutClass`;\r\n        }\r\n        else if ('add_cls' === e) {\r\n            body = { name };\r\n            post_url = `${baseurl}api/mpeg/AddClass`;\r\n        }\r\n        else if ('delete_cls' === e) {\r\n            body = { id };\r\n            post_url = `${baseurl}api/mpeg/RemoveClass`;\r\n        }\r\n        if (post_url == null || body == null) return;\r\n        axios.post(post_url, body, config).then(res => {\r\n            setError_Cls(res.data.data);\r\n            // console.log(res);\r\n            loadClasses();\r\n        }).catch(err => {\r\n            // console.log(err);\r\n            setError_Cls('Error to save data');\r\n        });\r\n    };\r\n    const PostSub = ({ name, id, e }) => {\r\n        setIsLoading_Sub(true);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            }\r\n        };\r\n        let body = null;\r\n        let post_url = null;\r\n\r\n        if ('update_sub' === e) {\r\n            body = { name, id };\r\n            post_url = `${baseurl}api/mpeg/PutSubject`;\r\n        }\r\n        else if ('add_sub' === e) {\r\n            body = { name };\r\n            post_url = `${baseurl}api/mpeg/AddSubject`;\r\n        }\r\n        else if ('delete_sub' === e) {\r\n            body = { id };\r\n            post_url = `${baseurl}api/mpeg/RemoveSubject`;\r\n        }\r\n        if (post_url == null || body == null) return;\r\n        axios.post(post_url, body, config).then(res => {\r\n            setError_Sub(res.data.data);\r\n            // console.log(res);\r\n            loadSubjects();\r\n        }).catch(err => {\r\n            // console.log(err);\r\n            setError_Sub('Error to save data');\r\n        });\r\n    };\r\n    const Action_Click = ({ id, className, subjectName }, e) => {\r\n        if ('edit_cls' === e) {\r\n            // console.log(id, className, 'edit_cls');\r\n            txtClsId.current.value = id;\r\n            txtCls.current.value = className;\r\n            setIsEditCls(true);\r\n            highlight_Edit(id);\r\n        }\r\n        else if ('update_cls' === e) {\r\n            // console.log('update_cls', txtClsId.current.value, txtCls.current.value);\r\n            if (txtCls.current.value == '') return;\r\n            if (txtClsId.current.value == '') return;\r\n            PostCls({ name: txtCls.current.value, id: txtClsId.current.value, e });\r\n            setTimeout(() => {\r\n                txtClsId.current.value = '';\r\n                txtCls.current.value = '';\r\n                setIsEditCls(false);\r\n                highlight_Edit(null);\r\n            }, 200);\r\n        }\r\n        else if ('delete_cls' === e) {\r\n            // console.log(id, 'delete_cls');\r\n            if (id == '') return;\r\n            PostCls({ id, e });\r\n        }\r\n        else if ('add_cls' === e) {\r\n            // console.log('add_cls', txtCls.current.value);\r\n            if (txtCls.current.value == '') return;\r\n            PostCls({ name: txtCls.current.value, e });\r\n            setTimeout(() => {\r\n                txtCls.current.value = '';\r\n            }, 200);\r\n        }\r\n        else if ('edit_sub' === e) {\r\n            // console.log(id, subjectName, 'edit_sub');\r\n            txtSubId.current.value = id;\r\n            txtSub.current.value = subjectName;\r\n            setIsEditSub(true);\r\n            highlight_Edit_Sub(id);\r\n        }\r\n        else if ('update_sub' === e) {\r\n            // console.log('update_sub', txtSubId.current.value, txtSub.current.value);\r\n            if (txtSub.current.value == '') return;\r\n            if (txtSubId.current.value == '') return;\r\n            PostSub({ name: txtSub.current.value, id: txtSubId.current.value, e });\r\n            setTimeout(() => {\r\n                txtSubId.current.value = '';\r\n                txtSub.current.value = '';\r\n                setIsEditSub(false);\r\n                highlight_Edit(null);\r\n                highlight_Edit_Sub(null);\r\n            }, 200);\r\n        }\r\n        else if ('delete_sub' === e) {\r\n            if (id == '') return;\r\n            PostSub({ id, e });\r\n        }\r\n        else if ('add_sub' === e) {\r\n            if (txtSub.current.value == '') return;\r\n            PostSub({ name: txtSub.current.value, e });\r\n            setTimeout(() => {\r\n                txtSub.current.value = '';\r\n            }, 200);\r\n        }\r\n    };\r\n    const Calcwidth = (e) => {\r\n        if ('cls' === e) {\r\n            if (typeof tblCls.current === 'undefined') return;\r\n            let h = parseInt(tblCls.current.clientHeight);\r\n            let h_parent = parseInt(tblCls.current.parentElement.clientHeight);\r\n            if (typeof tblClsHeader.current === 'undefined') return;\r\n            if (h > h_parent) {\r\n                tblClsHeader.current.style.borderRight = '.9rem solid #cecece';\r\n                // tblClsHeader.current.style.width = '98%';\r\n            } else {\r\n                tblClsHeader.current.style.borderRight = '0rem solid #cecece';\r\n                // tblClsHeader.current.style.width = '100%';\r\n            }\r\n        } else if ('sub' === e) {\r\n            if (typeof tblSub.current === 'undefined') return;\r\n            let h = parseInt(tblSub.current.clientHeight);\r\n            let h_parent = parseInt(tblSub.current.parentElement.clientHeight);\r\n            if (typeof tblClsHeader.current === 'undefined') return;\r\n            if (h > h_parent) {\r\n                tblSubHeader.current.style.borderRight = '.9rem solid #cecece';\r\n            }\r\n            else {\r\n                tblSubHeader.current.style.borderRight = '0rem solid #cecece';\r\n            }\r\n        }\r\n    };\r\n    const highlight_Edit = (id) => {\r\n        document.querySelectorAll('.tr_cls').forEach(i => {\r\n            i.classList.remove('active');\r\n        });\r\n        if (id)\r\n            document.querySelector('.tr_cls_' + id).classList.add('active');\r\n    };\r\n    const highlight_Edit_Sub = (id) => {\r\n        document.querySelectorAll('.tr_sub').forEach(i => {\r\n            i.classList.remove('active');\r\n        });\r\n        if (id)\r\n            document.querySelector('.tr_sub_' + id).classList.add('active');\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddCsub\">\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-sm-12 col-md-10 col-lg-6 pt-3 mx-auto\">\r\n                    <Table striped bordered hover className=\"mb-0\" ref={tblClsHeader}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"3\">\r\n                                    Class List\r\n                                    <span className=\"loading-error\">{getError_Cls}</span>\r\n                                    {\r\n                                        getIsLoading_Cls ? <Loading /> : null\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style={{ width: '10%' }}>#</th>\r\n                                <th style={{ width: '70%' }}>Description</th>\r\n                                <th style={{ width: '20%' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblCls} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getAllCls.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_cls tr_cls_' + item.id}>\r\n                                            <td style={{ width: '10%' }}>{index + 1}</td>\r\n                                            <td style={{ width: '70%' }}>{item.className}</td>\r\n                                            <td style={{ width: '20%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit_cls')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Delete Class\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_cls')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <Form noValidate>\r\n                        <Table striped bordered hover className=\"mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td style={{ width: '10%' }}></td>\r\n                                    <td style={{ width: '70%' }} className=\"py-1\">\r\n                                        <Form.Group controlId=\"Class_Name\" className=\"my-0\">\r\n                                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Class Name\" required\r\n                                                defaultValue=\"\" ref={txtCls} />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td className=\"actions py-1\" style={{ width: '20%' }}>\r\n                                        <input type=\"hidden\" ref={txtClsId} />\r\n                                        {getIsEditCls ?\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'update_cls')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"save\" className=\"ml-2\" /> Update\r\n                                            </MDBBtn> :\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_cls')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" /> Add\r\n                                            </MDBBtn>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n                    </Form>\r\n                </Col>\r\n                <Col className=\"col-sm-12 col-md-10 col-lg-6 pt-3 mx-auto Subject\">\r\n                    <Table striped bordered hover className=\"mb-0\" ref={tblSubHeader}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan=\"3\">\r\n                                    Subject List\r\n                                    <span className=\"loading-error\">{getError_Sub}</span>\r\n                                    {\r\n                                        getIsLoading_Sub ? <Loading /> : null\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style={{ width: '10%' }}>#</th>\r\n                                <th style={{ width: '70%' }}>Description</th>\r\n                                <th style={{ width: '20%' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblSub} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getAllSub.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_sub tr_sub_' + item.id}>\r\n                                            <td style={{ width: '10%' }}>{index + 1}</td>\r\n                                            <td style={{ width: '70%' }}>{item.subjectName}</td>\r\n                                            <td style={{ width: '20%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"edit Class\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit_sub')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Delete Class\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'delete_sub')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <Form noValidate>\r\n                        <Table striped bordered hover className=\"mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td style={{ width: '10%' }}></td>\r\n                                    <td style={{ width: '70%' }} className=\"py-1\">\r\n                                        <Form.Group controlId=\"Subject_Name\" className=\"my-0\">\r\n                                            <Form.Control type=\"text\" autoComplete=\"off\" placeholder=\"Subject Name\" required\r\n                                                defaultValue=\"\" ref={txtSub} />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td className=\"actions py-1\" style={{ width: '20%' }}>\r\n                                        <input type=\"hidden\" ref={txtSubId} />\r\n                                        {getIsEditSub ?\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'update_sub')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"save\" className=\"ml-2\" /> Update\r\n                                            </MDBBtn> :\r\n                                            <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_sub')} color=\"indigo\" className=\"btnAdd\">\r\n                                                <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" /> Add\r\n                                            </MDBBtn>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, Component } from 'react';\r\nimport { Button, Col, Container, Form, Row, Card, Table, InputGroup, FormControl, Pagination, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport Loading from '../Loading/Loading';\r\nimport { MDBIcon, MDBBtn } from \"mdbreact\";\r\nimport Select from 'react-select'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddChap.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport Add from './Add/Add';\r\n\r\nexport default function AddChap() {\r\n    // https://react-select.com/home\r\n    const baseurl = window.ffmpeg_baseurl;\r\n    const [getIsLoading, setIsLoading] = useState(false);\r\n    const [getError, setError] = useState('');\r\n    let contentInput = useRef(null);\r\n    const [getRecords, setRecords] = useState([]);\r\n    const [getSelectedLimit, setSelectedLimit] = useState(null);\r\n    let tblRecords = useRef(null);\r\n    let LazyKeyupTimer = useRef(null);\r\n    const [getPageItems, setPageItems] = useState([]);\r\n    const [getChapterParams, setChapterParams] = useState({\r\n        \"pageindex\": 0,\r\n        \"limit\": 10\r\n    });\r\n    const Limitoptions = [\r\n        { value: '10', label: '10' },\r\n        { value: '50', label: '50' },\r\n        { value: '100', label: '100' },\r\n    ]\r\n    const [getshowAdd, setshowAdd] = useState(false);\r\n    const [getAddData, setAddData] = useState({});\r\n\r\n    //#region Hooks \r\n    useEffect(() => {\r\n        loadChapters(getChapterParams);\r\n        setSelectedLimit({ value: '10', label: '10' });\r\n    }, []);\r\n    //#endregion  \r\n    const loadChapters = (_params) => {\r\n        setIsLoading(true);\r\n        setError('Loading...');\r\n        axios.get(`${baseurl}api/mpeg/getChapterFilter`, {\r\n            params: _params\r\n        })\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                setRecords(res.data.data);\r\n                let { pageindex, totalPage } = res.data;\r\n                //#region Pagination\r\n                let PageItems = [];\r\n                if (parseInt(pageindex) > 0) {\r\n                    PageItems.push(<Pagination.Item key={'prev'} onClick={() => { pageChange(parseInt(pageindex) - 1) }}>\r\n                        <MDBIcon icon=\"angle-double-left\" size=\"lg\" />\r\n                    </Pagination.Item>);\r\n                }\r\n                for (let p = 0; p < totalPage; p++) {\r\n                    PageItems.push(<Pagination.Item key={p} onClick={() => { pageChange(p) }} active={p == pageindex}>\r\n                        {parseInt(p) + 1}\r\n                    </Pagination.Item>);\r\n                }\r\n                if (parseInt(pageindex) < parseInt(totalPage)) {\r\n                    PageItems.push(<Pagination.Item key={'next'} onClick={() => { pageChange(parseInt(pageindex) + 1) }}>\r\n                        <MDBIcon icon=\"angle-double-right\" size=\"lg\" />\r\n                    </Pagination.Item>);\r\n                }\r\n                //#endregion\r\n                setPageItems(PageItems);\r\n                setIsLoading(false);\r\n                setError('');\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError('Error loading Chapter');\r\n            });\r\n    };\r\n    const pageChange = p_index => {\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, \"pageindex\": p_index };\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const orderByThis = (orderby, desc) => {\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, orderby, desc,\"pageindex\": 0 };\r\n            // console.log(data);\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const searchBy = (_val, e) => {\r\n        // console.log(_val, e);\r\n        if ('chap' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"chapterName\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('cls' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"className\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('sub' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"subjectName\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n        else if ('content_id' == e) {\r\n            LazyKeyup(() => {\r\n                setChapterParams(prevData => {\r\n                    let data = { ...prevData, \"contentID\": _val, \"pageindex\": 0 };\r\n                    loadChapters(data);\r\n                    return data;\r\n                });\r\n            });\r\n        }\r\n    };\r\n    const LazyKeyup = (_callback) => {\r\n        clearTimeout(LazyKeyupTimer.current);\r\n        LazyKeyupTimer.current = setTimeout(() => {\r\n            _callback();\r\n            // _callback.call(this, _args);\r\n        }, 1000);\r\n    };\r\n    const handleChange_limit = (e) => {\r\n        setSelectedLimit(e);\r\n        setChapterParams(prevData => {\r\n            let data = { ...prevData, \"limit\": e.value, \"pageindex\": 0 };\r\n            loadChapters(data);\r\n            return data;\r\n        });\r\n    };\r\n    const Action_Click = (item, e) => {\r\n        if ('add_new' == e) {\r\n            setAddData({\r\n                e: 'add'\r\n            });\r\n            setshowAdd(true);\r\n        }\r\n        else if ('edit' == e) {\r\n            setAddData({\r\n                e: 'edit',\r\n                data: item\r\n            });\r\n            setshowAdd(true);\r\n        }\r\n        else if ('remove' == e) {\r\n            if (!confirm('are you sure to delete?')) return;\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                }\r\n            };\r\n            let body = { id: item.id };\r\n            let post_url = `${baseurl}api/mpeg/RemoveChapter`;\r\n            if (post_url == null || body == null) return;\r\n            axios.post(post_url, body, config).then(res => {\r\n                setError(res.data.data);\r\n                setIsLoading(false);\r\n                loadChapters(getChapterParams);\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                // console.log(err);\r\n                setIsLoading(false);\r\n                setError_Cls('Error to delete data');\r\n            });\r\n        }\r\n    };\r\n    const hideAddForm = () => {\r\n        loadChapters(getChapterParams);\r\n        setshowAdd(false);\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"C_AddChap\">\r\n            <Row>\r\n                {\r\n                    getshowAdd ? <Add onhide={hideAddForm} data={getAddData} /> : null\r\n                }\r\n            </Row>\r\n            <Row className=\"h-100 m-0\">\r\n                <Col className=\"col-12 pt-3\">\r\n                    <span className=\"loading-error\">{getError}</span>\r\n                    {\r\n                        getIsLoading ? <Loading /> : null\r\n                    }\r\n                </Col>\r\n                <Col className=\"col-12\">\r\n                    <Table striped bordered hover className=\"mb-0\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '30%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Chapter\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'chap'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '10%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Class\r\n                                    <InputGroup size=\"sm\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'cls'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '15%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Subject\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'sub'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '30%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Content ID\r\n                                    <InputGroup size=\"sm\" className=\"\">\r\n                                            <FormControl\r\n                                                placeholder=\"Search\"\r\n                                                aria-label=\"\"\r\n                                                aria-describedby=\"basic-addon2\"\r\n                                                onKeyUp={(e) => { searchBy(e.target.value, 'content_id'); }}\r\n                                                ref={contentInput}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </th>\r\n                                <th style={{ width: '15%' }} className=\"px-1\">\r\n                                    <div className=\"td-filter-box\">\r\n                                        Action\r\n                                    <Dropdown>\r\n                                            <Dropdown.Toggle size=\"sm\" variant=\"light\" id=\"dropdown-basic\" className=\"w-100 m-0\">\r\n                                                Sort By &nbsp;&nbsp;\r\n                                        </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('chapterName', 'false'); }}>Chapter</Button>\r\n                                                        <Button onClick={() => { orderByThis('chapterName', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('classId', 'false'); }}>Class</Button>\r\n                                                        <Button onClick={() => { orderByThis('classId', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('subjectId', 'false'); }}>Subject</Button>\r\n                                                        <Button onClick={() => { orderByThis('subjectId', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item href=\"#\">\r\n                                                    <ButtonGroup size=\"sm\">\r\n                                                        <Button style={{ marginRight: '.7rem' }} onClick={() => { orderByThis('contentID', 'false'); }}>contentID</Button>\r\n                                                        <Button onClick={() => { orderByThis('contentID', 'true'); }}>Desc</Button>\r\n                                                    </ButtonGroup>\r\n                                                </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"tblList-class\">\r\n                        <Table striped bordered hover ref={tblRecords} className=\"mb-0\">\r\n                            <tbody>\r\n                                {\r\n                                    getRecords.map((item, index) => {\r\n                                        return <tr key={index} className={'tr_cls tr_cls_' + item.id}>\r\n                                            <td style={{ width: '30%' }}>{item.chapterName}</td>\r\n                                            <td style={{ width: '10%' }}>{item.className}</td>\r\n                                            <td style={{ width: '15%' }}>{item.subjectName}</td>\r\n                                            <td style={{ width: '30%' }}>{item.contentID}</td>\r\n                                            <td style={{ width: '15%' }} className=\"actions\">\r\n                                                <div>\r\n                                                    <button title=\"Change\" className=\"btnEdit\" type=\"button\" onClick={() => Action_Click(item, 'edit')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"edit mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                    <button title=\"Remove\" className=\"btnDelete\" type=\"button\" onClick={() => Action_Click(item, 'remove')}>\r\n                                                        <MDBIcon size=\"lg\" icon=\"trash-alt mdb-gallery-view-icon\" />\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>;\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"col-4 pt-3\">\r\n                    <table className=\"lmt\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"y\"> Limit: </div>\r\n                                    <Select value={getSelectedLimit} className=\"x\" options={Limitoptions} onChange={handleChange_limit} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n                <Col className=\"col-8 pt-3 pagination-wrapper\">\r\n                    <Pagination size=\"sm\">{getPageItems}</Pagination>\r\n                </Col>\r\n                <Col className=\"col-12 pt-3\">\r\n                    <MDBBtn size=\"sm\" onClick={() => Action_Click({}, 'add_new')} color=\"indigo\" className=\"btnAdd\">\r\n                        <MDBIcon size=\"lg\" icon=\"plus-circle mdb-gallery-view-icon\" className=\"ml-2\" />&nbsp; Add New\r\n                    </MDBBtn>\r\n                    <p>\r\n                        <br />\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\n// import styled from \"styled-components\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ffmpeg.scss';\r\nimport Entry from \"./Entry/Entry\";\r\nimport Home from \"./Home/Home\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport Upload from \"./Admin/Upload/Upload\";\r\nimport Conversion from \"./Admin/Conversion/Conversion\";\r\nimport AddCsub from \"./Admin/AddCsub/AddCsub\";\r\nimport AddChap from \"./Admin/AddChap/AddChap\";\r\n\r\nexport default function Routes(props) {\r\n    return (\r\n        <>\r\n            <Route path=\"/\" exact>\r\n                {\r\n                    <Entry />\r\n                    // <Admin />\r\n                }\r\n            </Route>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            <Switch>\r\n                <Route path=\"/home\" exact component={Home} />\r\n                <Route path=\"/admin/upload\" exact component={Upload} />\r\n                <Route path=\"/admin/conversion\" exact component={Conversion} />\r\n                <Route path=\"/admin/addclsnsub\" exact component={AddCsub} />\r\n                <Route path=\"/admin/addchap\" exact component={AddChap} />\r\n                <Route path=\"/admin/test\" exact render={() => { return <h3>Test</h3> }} />\r\n            </Switch>\r\n        </>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom'; // BrowserRouter  HashRouter\r\n\r\nimport Routes from './ffmpeg/Routes';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Routes />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport axios from 'axios';\r\n\r\n//#region Demo\r\n// axios.defaults.baseURL = \"https://jsonplaceholder.typicode.com\";\r\n// axios.defaults.headers.common['Auth'] = 'AUTH 56';\r\n// axios.defaults.headers.post['content'] = 'CONTENT XX'\r\n\r\n// axios.interceptors.request.use(req => {\r\n//     // console.log({req});\r\n//     return req;\r\n// }, error => {\r\n//     console.log(error);\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n// axios.interceptors.response.use(res => {\r\n//     // console.log({res});\r\n//     return res;\r\n// });\r\n//#endregion\r\nconsole.clear();\r\nlet publish = window.publish || false;\r\nif(publish == true){\r\n    window.ffmpeg_baseurl = window.location.origin + \"/\";\r\n} else {\r\n    window.ffmpeg_baseurl = \"http://localhost:50017/\";\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}